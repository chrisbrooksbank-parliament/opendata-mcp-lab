{
  "openapi": "3.0.1",
  "info": {
    "title": "Committees API",
    "description": "API to get and search for information regarding committees, membership and items of committee business.",
    "contact": {
      "name": "UK Parliament",
      "url": "https://www.parliament.uk",
      "email": "softwareengineering@parliament.uk"
    },
    "version": "v1"
  },
  "paths": {
    "/api/BillPetitions": {
      "get": {
        "tags": [
          "Bill Petitions"
        ],
        "summary": "Return a list of Bill petitions",
        "operationId": "GetBillPetitions",
        "parameters": [
          {
            "name": "CommitteeBusinessId",
            "in": "query",
            "description": "List of evidence related to a committee business with the committee business id",
            "schema": {
              "title": "Nullable<Int32>",
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CommitteeId",
            "in": "query",
            "description": "List of evidence related to a committee with the committee id",
            "schema": {
              "title": "Nullable<Int32>",
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SearchTerm",
            "in": "query",
            "description": "Search by witness names, organisation names, and submission identifiers (where applicable). Must be 2 characters or more.",
            "schema": {
              "minLength": 2,
              "type": "string"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "List of evidence published on or after date provided",
            "schema": {
              "title": "Nullable<DateTime>",
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "List of evidence published on or before date provided",
            "schema": {
              "title": "Nullable<DateTime>",
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "ShowOnWebsiteOnly",
            "in": "query",
            "description": "Only return committee website results - defaults to true",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Skip",
            "in": "query",
            "description": "Numbers of items to skip - defaults to 0",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Take",
            "in": "query",
            "description": "Number of items to be returned - defaults to 30",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.ResourceCollection`1[Committees.Common.Responses.Common.Submission.HybridBillPetition]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.ResourceCollection`1[Committees.Common.Responses.Common.Submission.HybridBillPetition]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.ResourceCollection`1[Committees.Common.Responses.Common.Submission.HybridBillPetition]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/BillPetitions/{id}": {
      "get": {
        "tags": [
          "Bill Petitions"
        ],
        "summary": "Return a Bill petition",
        "operationId": "GetBillPetitionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Bill petition with ID specified",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "showOnWebsiteOnly",
            "in": "query",
            "description": "Only return committee website results - defaults to true",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.Responses.Common.Submission.HybridBillPetition"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.Responses.Common.Submission.HybridBillPetition"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.Responses.Common.Submission.HybridBillPetition"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/BillPetitions/{id}/Document/{fileDataFormat}": {
      "get": {
        "tags": [
          "Bill Petitions"
        ],
        "summary": "Return a document for a Bill petition",
        "operationId": "GetBillPetitionDocument",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Petition Id of the document return",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fileDataFormat",
            "in": "path",
            "description": "Type of file to return",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Committees.Common.Enums.FileDataFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.Responses.DocumentFileDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.Responses.DocumentFileDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.Responses.DocumentFileDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Broadcast/Meetings": {
      "get": {
        "tags": [
          "Broadcast"
        ],
        "summary": "Get a list of Committee Meetings between two dates.",
        "operationId": "Get",
        "parameters": [
          {
            "name": "FromDate",
            "in": "query",
            "description": "Get meetings from and including this date, format 'yyyy-mm-dd'.",
            "required": true,
            "schema": {
              "title": "Nullable<DateTime>",
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "ToDate",
            "in": "query",
            "description": "Get meetings up to and including this date, format 'yyyy-mm-dd'.",
            "required": true,
            "schema": {
              "title": "Nullable<DateTime>",
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Activities for event with given Id",
            "content": {
              "text/plain": {
                "schema": {
                  "title": "IEnumerable<CommitteeMeetingForBroadcasters>",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Committees.Common.Responses.CommitteeMeetingForBroadcasters"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "title": "IEnumerable<CommitteeMeetingForBroadcasters>",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Committees.Common.Responses.CommitteeMeetingForBroadcasters"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "title": "IEnumerable<CommitteeMeetingForBroadcasters>",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Committees.Common.Responses.CommitteeMeetingForBroadcasters"
                  }
                }
              }
            }
          },
          "404": {
            "description": "No event with given Id exists",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/CommitteeBusiness": {
      "get": {
        "tags": [
          "Committee Business"
        ],
        "summary": "Return a list of committee businesses",
        "operationId": "GetCommitteeBusiness",
        "parameters": [
          {
            "name": "SearchTerm",
            "in": "query",
            "description": "Search by committee business name. Must be 2 characters or more.",
            "schema": {
              "minLength": 2,
              "type": "string"
            }
          },
          {
            "name": "CommitteeId",
            "in": "query",
            "description": "Id for the related committee",
            "schema": {
              "title": "Nullable<Int32>",
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "description": "List of committee business starting on or after date provided",
            "schema": {
              "title": "Nullable<DateTime>",
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "description": "List of committee business opened on or before date provided",
            "schema": {
              "title": "Nullable<DateTime>",
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "BusinessTypeId",
            "in": "query",
            "description": "Id for committee business type",
            "schema": {
              "title": "Nullable<Int32>",
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "List of committees business by status",
            "schema": {
              "$ref": "#/components/schemas/Committees.Common.Enums.CommitteeBusinessStatus"
            }
          },
          {
            "name": "CurrentlyAcceptingPetitions",
            "in": "query",
            "description": "Limit to committee businesses that are currently accepting hybrid or private bill petitions",
            "schema": {
              "title": "Nullable<Boolean>",
              "type": "boolean"
            }
          },
          {
            "name": "CurrentlyAcceptingEvidence",
            "in": "query",
            "description": "Limit to committee businesses that are currently accepting written evidence submissions",
            "schema": {
              "title": "Nullable<Boolean>",
              "type": "boolean"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "description": "List committee business by specified sort order",
            "schema": {
              "$ref": "#/components/schemas/Committees.Common.Enums.CommitteeBusinessQuerySortOrder"
            }
          },
          {
            "name": "CommitteeBusinessIds",
            "in": "query",
            "description": "List of committee businesses by Ids",
            "schema": {
              "title": "IEnumerable<Nullable`1>",
              "type": "array",
              "items": {
                "title": "Nullable<Int32>",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "ShowOnWebsiteOnly",
            "in": "query",
            "description": "Only return committee website results - defaults to true",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Skip",
            "in": "query",
            "description": "Numbers of items to skip - defaults to 0",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Take",
            "in": "query",
            "description": "Number of items to be returned - defaults to 30",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of committee businesses matching the specified search parameters",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.ResourceCollection`1[Committees.Common.Responses.CommitteeBusinessSummary]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.ResourceCollection`1[Committees.Common.Responses.CommitteeBusinessSummary]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.ResourceCollection`1[Committees.Common.Responses.CommitteeBusinessSummary]"
                }
              }
            }
          },
          "400": {
            "description": "There was an error with one or more of specified search parameters",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/CommitteeBusiness/{id}": {
      "get": {
        "tags": [
          "Committee Business"
        ],
        "summary": "Return a committee business",
        "operationId": "GetCommitteeBusinessById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Committee business Id to return",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "includeBanners",
            "in": "query",
            "description": "Include banner image file in result - defaults to false",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "showOnWebsiteOnly",
            "in": "query",
            "description": "Only return committee website results - defaults to true",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Committee business with given Id",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.Responses.CommitteeBusinessDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.Responses.CommitteeBusinessDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.Responses.CommitteeBusinessDetails"
                }
              }
            }
          },
          "404": {
            "description": "No Committee business with given Id exists",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/CommitteeBusiness/{id}/Publications/Summary": {
      "get": {
        "tags": [
          "Committee Business"
        ],
        "summary": "Return a list of Publication Groups for a Commitee Business",
        "operationId": "ListCommitteeBusinessPublicationGroups",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The committee business id",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "title": "IEnumerable<PublicationGroup>",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Committees.Common.Responses.PublicationGroup"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "title": "IEnumerable<PublicationGroup>",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Committees.Common.Responses.PublicationGroup"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "title": "IEnumerable<PublicationGroup>",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Committees.Common.Responses.PublicationGroup"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/CommitteeBusinessType": {
      "get": {
        "tags": [
          "Committee Business Types"
        ],
        "summary": "Return a list of Committee Business Types",
        "operationId": "ListCommitteeBusinessTypes",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "title": "IEnumerable<CommitteeBusinessType>",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Committees.Common.Responses.Common.Business.CommitteeBusinessType"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "title": "IEnumerable<CommitteeBusinessType>",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Committees.Common.Responses.Common.Business.CommitteeBusinessType"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "title": "IEnumerable<CommitteeBusinessType>",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Committees.Common.Responses.Common.Business.CommitteeBusinessType"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/CommitteeType": {
      "get": {
        "tags": [
          "Committee Types"
        ],
        "summary": "Return a list of Committee Types",
        "operationId": "ListCommitteeTypes",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "title": "IEnumerable<CommitteeType>",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Committees.Common.Responses.Common.Committee.CommitteeType"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "title": "IEnumerable<CommitteeType>",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Committees.Common.Responses.Common.Committee.CommitteeType"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "title": "IEnumerable<CommitteeType>",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Committees.Common.Responses.Common.Committee.CommitteeType"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Committees": {
      "get": {
        "tags": [
          "Committees"
        ],
        "summary": "Return a list of Committees",
        "operationId": "GetCommittees",
        "parameters": [
          {
            "name": "CommitteeBusinessId",
            "in": "query",
            "description": "List of committees by committee business",
            "schema": {
              "title": "Nullable<Int32>",
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SearchTerm",
            "in": "query",
            "description": "Search by committee name. Performs a full text search across committee names (including historic), as well as any metadata configured for the committee.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ParentCommitteeId",
            "in": "query",
            "description": "List of committees by child committees of a parent",
            "schema": {
              "title": "Nullable<Int32>",
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CommitteeStatus",
            "in": "query",
            "description": "List of committees by status - defaults to current",
            "schema": {
              "$ref": "#/components/schemas/Committees.Common.Enums.CommitteeStatus"
            }
          },
          {
            "name": "CommitteeTypeId",
            "in": "query",
            "description": "List of committees by the type",
            "schema": {
              "title": "Nullable<Int32>",
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CommitteeCategory",
            "in": "query",
            "description": "List of committees by category",
            "schema": {
              "$ref": "#/components/schemas/Committees.Common.Enums.CommitteeCategory"
            }
          },
          {
            "name": "House",
            "in": "query",
            "description": "List of committees by House",
            "schema": {
              "$ref": "#/components/schemas/Committees.Common.Enums.House"
            }
          },
          {
            "name": "CommitteeIds",
            "in": "query",
            "description": "List of committees by Ids",
            "schema": {
              "title": "IEnumerable<Nullable`1>",
              "type": "array",
              "items": {
                "title": "Nullable<Int32>",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "ShowOnWebsiteOnly",
            "in": "query",
            "description": "Only return committee website results - defaults to true",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Skip",
            "in": "query",
            "description": "Numbers of items to skip - defaults to 0",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Take",
            "in": "query",
            "description": "Number of items to be returned - defaults to 30",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.ResourceCollection`1[Committees.Common.Responses.CommitteeSummary]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.ResourceCollection`1[Committees.Common.Responses.CommitteeSummary]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.ResourceCollection`1[Committees.Common.Responses.CommitteeSummary]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Committees/NextEvent": {
      "get": {
        "tags": [
          "Committees"
        ],
        "summary": "Return a list of next events for committees matching specified criteria",
        "operationId": "GetNextEventForCommittees",
        "parameters": [
          {
            "name": "EventWithActivitiesOnly",
            "in": "query",
            "description": "Only returns events with valid activities - defaults to false",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "EventFromDate",
            "in": "query",
            "description": "Date from which upcoming event is to be calculated",
            "schema": {
              "title": "Nullable<DateTime>",
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "House",
            "in": "query",
            "description": "House of committee",
            "schema": {
              "$ref": "#/components/schemas/Committees.Common.Enums.House"
            }
          },
          {
            "name": "EventTypes",
            "in": "query",
            "description": "List of event activities with the specified event type",
            "schema": {
              "title": "IEnumerable<Int32>",
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "ShowOnWebsiteOnly",
            "in": "query",
            "description": "Only return committee website results - defaults to true",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Skip",
            "in": "query",
            "description": "Numbers of items to skip - defaults to 0",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Take",
            "in": "query",
            "description": "Number of items to be returned - defaults to 30",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.ResourceCollection`1[Committees.Common.Responses.EventActivities]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.ResourceCollection`1[Committees.Common.Responses.EventActivities]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.ResourceCollection`1[Committees.Common.Responses.EventActivities]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Committees/{id}": {
      "get": {
        "tags": [
          "Committees"
        ],
        "summary": "Return a Committee",
        "operationId": "GetCommitteeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Committee with ID specified",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "includeBanners",
            "in": "query",
            "description": "Include banner image file in result - defaults to false",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "showOnWebsiteOnly",
            "in": "query",
            "description": "Only return committee website results - defaults to true",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.Responses.CommitteeDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.Responses.CommitteeDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.Responses.CommitteeDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Committees/{id}/Events": {
      "get": {
        "tags": [
          "Committees"
        ],
        "summary": "Return events related to the committee id provided",
        "operationId": "GetEventsCommitteeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Committee with id specified",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CommitteeBusinessId",
            "in": "query",
            "description": "List of events related to a committee business",
            "schema": {
              "title": "Nullable<Int32>",
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SearchTerm",
            "in": "query",
            "description": "List of events containing the search term specified. Must be 2 characters or more.",
            "schema": {
              "minLength": 2,
              "type": "string"
            }
          },
          {
            "name": "StartDateFrom",
            "in": "query",
            "description": "List of events starting after the date provided",
            "schema": {
              "title": "Nullable<DateTime>",
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "StartDateTo",
            "in": "query",
            "description": "List of events starting before the date provided",
            "schema": {
              "title": "Nullable<DateTime>",
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDateFrom",
            "in": "query",
            "description": "List of events ending after the date provided",
            "schema": {
              "title": "Nullable<DateTime>",
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "House",
            "in": "query",
            "description": "List of events with committees pertaining to the house specified",
            "schema": {
              "$ref": "#/components/schemas/Committees.Common.Enums.House"
            }
          },
          {
            "name": "LocationId",
            "in": "query",
            "description": "List of events with the location id specified",
            "schema": {
              "title": "Nullable<Int32>",
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ExcludeCancelledEvents",
            "in": "query",
            "description": "Exclude cancelled events from the response",
            "schema": {
              "title": "Nullable<Boolean>",
              "type": "boolean"
            }
          },
          {
            "name": "SortAscending",
            "in": "query",
            "description": "Sort by start date ascending",
            "schema": {
              "title": "Nullable<Boolean>",
              "type": "boolean"
            }
          },
          {
            "name": "EventTypeId",
            "in": "query",
            "description": "List of events with the specified event type",
            "schema": {
              "title": "Nullable<Int32>",
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "IncludeEventAttendees",
            "in": "query",
            "description": "Include the events attendees in the response (it's a little more expensive to do so)",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ShowOnWebsiteOnly",
            "in": "query",
            "description": "Only return committee website results - defaults to true",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Skip",
            "in": "query",
            "description": "Numbers of items to skip - defaults to 0",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Take",
            "in": "query",
            "description": "Number of items to be returned - defaults to 30",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.ResourceCollection`1[Committees.Common.Responses.Common.Events.EventSummary]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.ResourceCollection`1[Committees.Common.Responses.Common.Events.EventSummary]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.ResourceCollection`1[Committees.Common.Responses.Common.Events.EventSummary]"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Committees/{id}/Members": {
      "get": {
        "tags": [
          "Committees"
        ],
        "summary": "Return a list of Memberships of a Committee",
        "operationId": "ListCommitteeMemberships",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The committee id",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MembershipStatus",
            "in": "query",
            "description": "List of committee members' memberships by status",
            "schema": {
              "$ref": "#/components/schemas/Committees.Common.Enums.MembershipStatus"
            }
          },
          {
            "name": "ShowOnWebsiteOnly",
            "in": "query",
            "description": "Only return committee website results - defaults to true",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Skip",
            "in": "query",
            "description": "Numbers of items to skip - defaults to 0",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Take",
            "in": "query",
            "description": "Number of items to be returned - defaults to 30",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.ResourceCollection`1[Committees.Common.Responses.CommitteeMember]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.ResourceCollection`1[Committees.Common.Responses.CommitteeMember]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.ResourceCollection`1[Committees.Common.Responses.CommitteeMember]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Committees/{id}/Members/{personId}": {
      "get": {
        "tags": [
          "Committees"
        ],
        "summary": "Return photo for a lay member of the committee",
        "operationId": "GetCommitteePersonPhoto",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The committee id",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "personId",
            "in": "path",
            "description": "Id of the lay member",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.ResourceCollection`1[Committees.Common.Responses.CommitteeMember]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.ResourceCollection`1[Committees.Common.Responses.CommitteeMember]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.ResourceCollection`1[Committees.Common.Responses.CommitteeMember]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Committees/{id}/Staff": {
      "get": {
        "tags": [
          "Committees"
        ],
        "summary": "Return a list of staff members of a Committee",
        "operationId": "ListCommitteeStaffMemberships",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The committee id",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MembershipStatus",
            "in": "query",
            "description": "List of committee staff by status",
            "schema": {
              "$ref": "#/components/schemas/Committees.Common.Enums.MembershipStatus"
            }
          },
          {
            "name": "ShowOnWebsiteOnly",
            "in": "query",
            "description": "Only return committee website results - defaults to true",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Skip",
            "in": "query",
            "description": "Numbers of items to skip - defaults to 0",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Take",
            "in": "query",
            "description": "Number of items to be returned - defaults to 30",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.ResourceCollection`1[Committees.Common.Responses.CommitteeMember]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.ResourceCollection`1[Committees.Common.Responses.CommitteeMember]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.ResourceCollection`1[Committees.Common.Responses.CommitteeMember]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Committees/{id}/Publications/Summary": {
      "get": {
        "tags": [
          "Committees"
        ],
        "summary": "Return a list of Publication Groups for a Commitee",
        "operationId": "ListCommitteePublicationGroups",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The committee id",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "title": "IEnumerable<PublicationGroup>",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Committees.Common.Responses.PublicationGroup"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "title": "IEnumerable<PublicationGroup>",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Committees.Common.Responses.PublicationGroup"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "title": "IEnumerable<PublicationGroup>",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Committees.Common.Responses.PublicationGroup"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Committees/{id}/ArchivedPublicationLinks": {
      "get": {
        "tags": [
          "Committees"
        ],
        "summary": "Return all CommitteeArchivedPublicationLinks linked to a Committee",
        "operationId": "GetCommitteeArchivedPublicationLinks",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Committee Id specified",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "title": "IEnumerable<ArchivedPublicationGroup>",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Committees.Common.Responses.ArchivedPublicationGroup"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "title": "IEnumerable<ArchivedPublicationGroup>",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Committees.Common.Responses.ArchivedPublicationGroup"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "title": "IEnumerable<ArchivedPublicationGroup>",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Committees.Common.Responses.ArchivedPublicationGroup"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Countries": {
      "get": {
        "tags": [
          "Countries"
        ],
        "summary": "Return a list of Countries",
        "operationId": "GetCountries",
        "responses": {
          "200": {
            "description": "List of Countries",
            "content": {
              "text/plain": {
                "schema": {
                  "title": "IEnumerable<Country>",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Committees.Common.Responses.Country"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "title": "IEnumerable<Country>",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Committees.Common.Responses.Country"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "title": "IEnumerable<Country>",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Committees.Common.Responses.Country"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Events": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Return a list of events",
        "operationId": "GetEvents",
        "parameters": [
          {
            "name": "CommitteeId",
            "in": "query",
            "description": "Return a list of events for the committee ID specified",
            "schema": {
              "title": "Nullable<Int32>",
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CommitteeBusinessId",
            "in": "query",
            "description": "Return a list of events for the committee Business ID specified",
            "schema": {
              "title": "Nullable<Int32>",
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "GroupChildEventsWithParent",
            "in": "query",
            "description": "Return child events as a property of its parent event - defaults to false",
            "schema": {
              "title": "Nullable<Boolean>",
              "type": "boolean"
            }
          },
          {
            "name": "SearchTerm",
            "in": "query",
            "description": "List of events containing the search term specified. Must be 2 characters or more.",
            "schema": {
              "minLength": 2,
              "type": "string"
            }
          },
          {
            "name": "StartDateFrom",
            "in": "query",
            "description": "List of events starting after the date provided",
            "schema": {
              "title": "Nullable<DateTime>",
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "StartDateTo",
            "in": "query",
            "description": "List of events starting before the date provided",
            "schema": {
              "title": "Nullable<DateTime>",
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDateFrom",
            "in": "query",
            "description": "List of events ending after the date provided",
            "schema": {
              "title": "Nullable<DateTime>",
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "House",
            "in": "query",
            "description": "List of events with committees pertaining to the house specified",
            "schema": {
              "$ref": "#/components/schemas/Committees.Common.Enums.House"
            }
          },
          {
            "name": "LocationId",
            "in": "query",
            "description": "List of events with the location id specified",
            "schema": {
              "title": "Nullable<Int32>",
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ExcludeCancelledEvents",
            "in": "query",
            "description": "Exclude cancelled events from the response",
            "schema": {
              "title": "Nullable<Boolean>",
              "type": "boolean"
            }
          },
          {
            "name": "SortAscending",
            "in": "query",
            "description": "Sort by start date ascending",
            "schema": {
              "title": "Nullable<Boolean>",
              "type": "boolean"
            }
          },
          {
            "name": "EventTypeId",
            "in": "query",
            "description": "List of events with the specified event type",
            "schema": {
              "title": "Nullable<Int32>",
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "IncludeEventAttendees",
            "in": "query",
            "description": "Include the events attendees in the response (it's a little more expensive to do so)",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ShowOnWebsiteOnly",
            "in": "query",
            "description": "Only return committee website results - defaults to true",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Skip",
            "in": "query",
            "description": "Numbers of items to skip - defaults to 0",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Take",
            "in": "query",
            "description": "Number of items to be returned - defaults to 30",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of events matching the specified search parameters",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.ResourceCollection`1[Committees.Common.Responses.Common.Events.EventSummary]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.ResourceCollection`1[Committees.Common.Responses.Common.Events.EventSummary]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.ResourceCollection`1[Committees.Common.Responses.Common.Events.EventSummary]"
                }
              }
            }
          },
          "400": {
            "description": "There was an error with one or more of specified search parameters",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Events/Activities": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Return a list of event activities",
        "operationId": "GetEventActivities",
        "parameters": [
          {
            "name": "IncludeActivityAttendees",
            "in": "query",
            "description": "Return a list of attendees with each activity - defaults to false",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CommitteeId",
            "in": "query",
            "description": "Return a list of events for the committee ID specified",
            "schema": {
              "title": "Nullable<Int32>",
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CommitteeBusinessId",
            "in": "query",
            "description": "Return a list of events for the committee Business ID specified",
            "schema": {
              "title": "Nullable<Int32>",
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "GroupChildEventsWithParent",
            "in": "query",
            "description": "Return child events as a property of its parent event - defaults to false",
            "schema": {
              "title": "Nullable<Boolean>",
              "type": "boolean"
            }
          },
          {
            "name": "SearchTerm",
            "in": "query",
            "description": "List of events containing the search term specified. Must be 2 characters or more.",
            "schema": {
              "minLength": 2,
              "type": "string"
            }
          },
          {
            "name": "StartDateFrom",
            "in": "query",
            "description": "List of events starting after the date provided",
            "schema": {
              "title": "Nullable<DateTime>",
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "StartDateTo",
            "in": "query",
            "description": "List of events starting before the date provided",
            "schema": {
              "title": "Nullable<DateTime>",
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDateFrom",
            "in": "query",
            "description": "List of events ending after the date provided",
            "schema": {
              "title": "Nullable<DateTime>",
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "House",
            "in": "query",
            "description": "List of events with committees pertaining to the house specified",
            "schema": {
              "$ref": "#/components/schemas/Committees.Common.Enums.House"
            }
          },
          {
            "name": "LocationId",
            "in": "query",
            "description": "List of events with the location id specified",
            "schema": {
              "title": "Nullable<Int32>",
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ExcludeCancelledEvents",
            "in": "query",
            "description": "Exclude cancelled events from the response",
            "schema": {
              "title": "Nullable<Boolean>",
              "type": "boolean"
            }
          },
          {
            "name": "SortAscending",
            "in": "query",
            "description": "Sort by start date ascending",
            "schema": {
              "title": "Nullable<Boolean>",
              "type": "boolean"
            }
          },
          {
            "name": "EventTypeId",
            "in": "query",
            "description": "List of events with the specified event type",
            "schema": {
              "title": "Nullable<Int32>",
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "IncludeEventAttendees",
            "in": "query",
            "description": "Include the events attendees in the response (it's a little more expensive to do so)",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ShowOnWebsiteOnly",
            "in": "query",
            "description": "Only return committee website results - defaults to true",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Skip",
            "in": "query",
            "description": "Numbers of items to skip - defaults to 0",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Take",
            "in": "query",
            "description": "Number of items to be returned - defaults to 30",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of events with activities matching the specified search parameters",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.ResourceCollection`1[Committees.Common.Responses.EventActivities]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.ResourceCollection`1[Committees.Common.Responses.EventActivities]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.ResourceCollection`1[Committees.Common.Responses.EventActivities]"
                }
              }
            }
          },
          "400": {
            "description": "There was an error with one or more of specified search parameters",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Events/{id}": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Return an event",
        "operationId": "GetEventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Event Id to return",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "showOnWebsiteOnly",
            "in": "query",
            "description": "Only return committee website results - defaults to true",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Event with given Id",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.Responses.EventDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.Responses.EventDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.Responses.EventDetails"
                }
              }
            }
          },
          "404": {
            "description": "No event with given Id exists",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Events/{id}/Attendance": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Return a list of attendances for an event",
        "operationId": "GetAttendancesById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Event Id to return attendance for",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "showOnWebsiteOnly",
            "in": "query",
            "description": "Only return committee website results - defaults to true",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Attendance for event with given Id",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.Responses.EventAttendanceDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.Responses.EventAttendanceDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.Responses.EventAttendanceDetails"
                }
              }
            }
          },
          "404": {
            "description": "No event with given Id exists",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Events/{id}/Activities": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Return a list of activities for an event",
        "operationId": "GetActivitiesById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Event Id to return activities for",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "showOnWebsiteOnly",
            "in": "query",
            "description": "Only return committee website results - defaults to true",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Activities for event with given Id",
            "content": {
              "text/plain": {
                "schema": {
                  "title": "IEnumerable<ActivityDetails>",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Committees.Common.Responses.ActivityDetails"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "title": "IEnumerable<ActivityDetails>",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Committees.Common.Responses.ActivityDetails"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "title": "IEnumerable<ActivityDetails>",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Committees.Common.Responses.ActivityDetails"
                  }
                }
              }
            }
          },
          "404": {
            "description": "No event with given Id exists",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Members": {
      "get": {
        "tags": [
          "Members"
        ],
        "summary": "Return a list of memberships for one or more members",
        "operationId": "ListMembersCommitteeMemberships",
        "parameters": [
          {
            "name": "Members",
            "in": "query",
            "description": "List of member ids to filter by",
            "required": true,
            "schema": {
              "title": "IEnumerable<Nullable`1>",
              "type": "array",
              "items": {
                "title": "Nullable<Int32>",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "MembershipStatus",
            "in": "query",
            "description": "List of committee members' memberships by status",
            "schema": {
              "$ref": "#/components/schemas/Committees.Common.Enums.MembershipStatus"
            }
          },
          {
            "name": "CommitteeCategory",
            "in": "query",
            "description": "List of committee members' memberships by committee category",
            "schema": {
              "$ref": "#/components/schemas/Committees.Common.Enums.CommitteeCategory"
            }
          },
          {
            "name": "ShowOnWebsiteOnly",
            "in": "query",
            "description": "Only return committee website results - defaults to true",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "title": "IEnumerable<MemberFullMemberships>",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Committees.Common.Responses.MemberFullMemberships"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "title": "IEnumerable<MemberFullMemberships>",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Committees.Common.Responses.MemberFullMemberships"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "title": "IEnumerable<MemberFullMemberships>",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Committees.Common.Responses.MemberFullMemberships"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Messaging/Banners/{location}": {
      "get": {
        "tags": [
          "Messaging"
        ],
        "summary": "Return messaging banners",
        "operationId": "Banners",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "description": "Location of banner to return",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Committees.Services.Domain.BannerLocation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of banners matching criteria",
            "content": {
              "text/plain": {
                "schema": {
                  "title": "IEnumerable<MessagingBannerDetails>",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Committees.Common.Responses.MessagingBannerDetails"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "title": "IEnumerable<MessagingBannerDetails>",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Committees.Common.Responses.MessagingBannerDetails"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "title": "IEnumerable<MessagingBannerDetails>",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Committees.Common.Responses.MessagingBannerDetails"
                  }
                }
              }
            }
          },
          "404": {
            "description": "No banners matching criteria exist",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/OralEvidence": {
      "get": {
        "tags": [
          "Oral Evidence"
        ],
        "summary": "Return a list of Oral Evidence",
        "operationId": "GetOralEvidence",
        "parameters": [
          {
            "name": "CommitteeBusinessId",
            "in": "query",
            "description": "List of evidence related to a committee business with the committee business id",
            "schema": {
              "title": "Nullable<Int32>",
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CommitteeId",
            "in": "query",
            "description": "List of evidence related to a committee with the committee id",
            "schema": {
              "title": "Nullable<Int32>",
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SearchTerm",
            "in": "query",
            "description": "Search by witness names, organisation names, and submission identifiers (where applicable). Must be 2 characters or more.",
            "schema": {
              "minLength": 2,
              "type": "string"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "List of evidence published on or after date provided",
            "schema": {
              "title": "Nullable<DateTime>",
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "List of evidence published on or before date provided",
            "schema": {
              "title": "Nullable<DateTime>",
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "ShowOnWebsiteOnly",
            "in": "query",
            "description": "Only return committee website results - defaults to true",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Skip",
            "in": "query",
            "description": "Numbers of items to skip - defaults to 0",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Take",
            "in": "query",
            "description": "Number of items to be returned - defaults to 30",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.ResourceCollection`1[Committees.Common.Responses.Common.Submission.OralEvidence]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.ResourceCollection`1[Committees.Common.Responses.Common.Submission.OralEvidence]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.ResourceCollection`1[Committees.Common.Responses.Common.Submission.OralEvidence]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/OralEvidence/{id}": {
      "get": {
        "tags": [
          "Oral Evidence"
        ],
        "summary": "Return an Oral Evidence",
        "operationId": "GetOralEvidenceById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Oral Evidence with ID specified",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "showOnWebsiteOnly",
            "in": "query",
            "description": "Only return committee website results - defaults to true",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.Responses.Common.Submission.OralEvidence"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.Responses.Common.Submission.OralEvidence"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.Responses.Common.Submission.OralEvidence"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/OralEvidence/{id}/Document/{fileDataFormat}": {
      "get": {
        "tags": [
          "Oral Evidence"
        ],
        "summary": "Return a document for an Oral Evidence",
        "operationId": "GetOralEvidenceDocument",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Oral Evidence Id of the document return",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fileDataFormat",
            "in": "path",
            "description": "Type of file to return",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Committees.Common.Enums.FileDataFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.Responses.DocumentFileDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.Responses.DocumentFileDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.Responses.DocumentFileDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/PublicationType": {
      "get": {
        "tags": [
          "Publication Types"
        ],
        "summary": "Return a list of Publication Types",
        "operationId": "ListPublicationTypes",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "title": "IEnumerable<PublicationType>",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Committees.Common.Responses.Common.Publication.PublicationType"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "title": "IEnumerable<PublicationType>",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Committees.Common.Responses.Common.Publication.PublicationType"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "title": "IEnumerable<PublicationType>",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Committees.Common.Responses.Common.Publication.PublicationType"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Publications": {
      "get": {
        "tags": [
          "Publications"
        ],
        "summary": "Return a list of publications",
        "operationId": "GetPublications",
        "parameters": [
          {
            "name": "PublicationTypeIds",
            "in": "query",
            "description": "Ids for types of publications",
            "schema": {
              "title": "IEnumerable<Nullable`1>",
              "type": "array",
              "items": {
                "title": "Nullable<Int32>",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "SearchTerm",
            "in": "query",
            "description": "Search by publication description, metadata, and paper number (where applicable). Must be 2 characters or more.",
            "schema": {
              "minLength": 2,
              "type": "string"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "List of publications published on or after date provided",
            "schema": {
              "title": "Nullable<DateTime>",
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "List of publications published on or before date provided",
            "schema": {
              "title": "Nullable<DateTime>",
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "description": "List publications by specified sort order",
            "schema": {
              "$ref": "#/components/schemas/Committees.Common.Enums.PublicationQuerySortOrder"
            }
          },
          {
            "name": "PaperNumbers",
            "in": "query",
            "description": "List of publications by specfied paper numbers",
            "schema": {
              "title": "IEnumerable<String>",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CommitteeBusinessId",
            "in": "query",
            "description": "List of publications related to a committee business with the committee business id",
            "schema": {
              "title": "Nullable<Int32>",
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CommitteeId",
            "in": "query",
            "description": "List of publications related to a committee with the committee id",
            "schema": {
              "title": "Nullable<Int32>",
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ShowOnWebsiteOnly",
            "in": "query",
            "description": "Only return committee website results - defaults to true",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Skip",
            "in": "query",
            "description": "Numbers of items to skip - defaults to 0",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Take",
            "in": "query",
            "description": "Number of items to be returned - defaults to 30",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of publications matching the specified search parameters",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.ResourceCollection`1[Committees.Common.Responses.Publication]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.ResourceCollection`1[Committees.Common.Responses.Publication]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.ResourceCollection`1[Committees.Common.Responses.Publication]"
                }
              }
            }
          },
          "400": {
            "description": "There was an error with one or more of specified search parameters",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Publications/{id}": {
      "get": {
        "tags": [
          "Publications"
        ],
        "summary": "Return a publication",
        "operationId": "GetPublicationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Publication Id to return",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "showOnWebsiteOnly",
            "in": "query",
            "description": "Only return committee website results - defaults to true",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Publication with given Id",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.Responses.Publication"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.Responses.Publication"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.Responses.Publication"
                }
              }
            }
          },
          "404": {
            "description": "No Publication with given Id exists",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Publications/{id}/Document/{documentId}/{fileDataFormat}": {
      "get": {
        "tags": [
          "Publications"
        ],
        "summary": "Return a document for a publication",
        "operationId": "GetDocument",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Publication Id to return",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "Document Id to return",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fileDataFormat",
            "in": "path",
            "description": "Type of file to return",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Committees.Common.Enums.FileDataFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Document and its data with given Ids",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.Responses.Common.Document.DocumentFile"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.Responses.Common.Document.DocumentFile"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.Responses.Common.Document.DocumentFile"
                }
              }
            }
          },
          "404": {
            "description": "One of the parameters supplied is invalid",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/SubmissionPeriodTemplate/{id}/Document/{documentId}": {
      "get": {
        "tags": [
          "Submission Period Templates"
        ],
        "summary": "Return a submission period template file",
        "operationId": "GetSubmissionPeriodTemplateDocumentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Submission period template id to return",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "Document id to return",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Submission period template document with given parameters",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.Responses.Common.Document.DocumentFile"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.Responses.Common.Document.DocumentFile"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.Responses.Common.Document.DocumentFile"
                }
              }
            }
          },
          "404": {
            "description": "No submission period template with given parameters exists",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/SubmissionPeriod/{id}": {
      "get": {
        "tags": [
          "Submission Periods"
        ],
        "summary": "Return a submission period",
        "operationId": "GetSubmissionPeriodById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Submission period id to return",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Submission period with given id",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.Responses.SubmissionPeriodDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.Responses.SubmissionPeriodDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.Responses.SubmissionPeriodDetails"
                }
              }
            }
          },
          "404": {
            "description": "No submission period with given id exists",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/WrittenEvidence": {
      "get": {
        "tags": [
          "Written Evidence"
        ],
        "summary": "Return a list of Written Evidence",
        "operationId": "GetWrittenEvidence",
        "parameters": [
          {
            "name": "CommitteeBusinessId",
            "in": "query",
            "description": "List of evidence related to a committee business with the committee business id",
            "schema": {
              "title": "Nullable<Int32>",
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CommitteeId",
            "in": "query",
            "description": "List of evidence related to a committee with the committee id",
            "schema": {
              "title": "Nullable<Int32>",
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SearchTerm",
            "in": "query",
            "description": "Search by witness names, organisation names, and submission identifiers (where applicable). Must be 2 characters or more.",
            "schema": {
              "minLength": 2,
              "type": "string"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "List of evidence published on or after date provided",
            "schema": {
              "title": "Nullable<DateTime>",
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "List of evidence published on or before date provided",
            "schema": {
              "title": "Nullable<DateTime>",
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "ShowOnWebsiteOnly",
            "in": "query",
            "description": "Only return committee website results - defaults to true",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Skip",
            "in": "query",
            "description": "Numbers of items to skip - defaults to 0",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Take",
            "in": "query",
            "description": "Number of items to be returned - defaults to 30",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.ResourceCollection`1[Committees.Common.Responses.Common.Submission.WrittenEvidence]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.ResourceCollection`1[Committees.Common.Responses.Common.Submission.WrittenEvidence]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.ResourceCollection`1[Committees.Common.Responses.Common.Submission.WrittenEvidence]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/WrittenEvidence/{id}": {
      "get": {
        "tags": [
          "Written Evidence"
        ],
        "summary": "Return a Written Evidence",
        "operationId": "GetWrittenEvidenceById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Written Evidence with the Id specified",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "showOnWebsiteOnly",
            "in": "query",
            "description": "Only return committee website results - defaults to true",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.Responses.Common.Submission.WrittenEvidence"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.Responses.Common.Submission.WrittenEvidence"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.Responses.Common.Submission.WrittenEvidence"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/WrittenEvidence/{id}/Document/{fileDataFormat}": {
      "get": {
        "tags": [
          "Written Evidence"
        ],
        "summary": "Return a document for a Written Evidence",
        "operationId": "GetWrittenEvidenceDocument",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Evidence Id of the document return",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fileDataFormat",
            "in": "path",
            "description": "Type of file to return",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Committees.Common.Enums.FileDataFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.Responses.DocumentFileDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.Responses.DocumentFileDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committees.Common.Responses.DocumentFileDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Committees.Common.Enums.CommitteeBusinessQuerySortOrder": {
        "enum": [
          "DateOpenedNewest",
          "DateOpenedOldest",
          "PublicationDateAscending",
          "PublicationDateDescending"
        ],
        "type": "string"
      },
      "Committees.Common.Enums.CommitteeBusinessStatus": {
        "enum": [
          "Open",
          "Closed"
        ],
        "type": "string"
      },
      "Committees.Common.Enums.CommitteeCategory": {
        "enum": [
          "Select",
          "General",
          "Other"
        ],
        "type": "string"
      },
      "Committees.Common.Enums.CommitteeStatus": {
        "enum": [
          "Current",
          "Former",
          "All"
        ],
        "type": "string"
      },
      "Committees.Common.Enums.FileDataFormat": {
        "enum": [
          "OriginalFormat",
          "Html",
          "Pdf"
        ],
        "type": "string"
      },
      "Committees.Common.Enums.House": {
        "enum": [
          "Commons",
          "Lords",
          "Joint"
        ],
        "type": "string"
      },
      "Committees.Common.Enums.MembershipStatus": {
        "enum": [
          "Current",
          "Former",
          "All"
        ],
        "type": "string"
      },
      "Committees.Common.Enums.PublicationQuerySortOrder": {
        "enum": [
          "PublicationDateDescending",
          "PublicationDateAscending",
          "ResponseDateDescending",
          "ResponseDateAscending"
        ],
        "type": "string"
      },
      "Committees.Common.Enums.RemoteAttendanceStatus": {
        "enum": [
          "InPerson",
          "Remote"
        ],
        "type": "string"
      },
      "Committees.Common.Enums.SubmissionType": {
        "enum": [
          "OralEvidence",
          "WrittenEvidence",
          "Petition"
        ],
        "type": "string"
      },
      "Committees.Common.Enums.SubmitterType": {
        "enum": [
          "Individual",
          "Organisation",
          "Proxy"
        ],
        "type": "string"
      },
      "Committees.Common.Link": {
        "type": "object",
        "properties": {
          "rel": {
            "type": "string",
            "nullable": true
          },
          "href": {
            "type": "string",
            "nullable": true
          },
          "method": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.ResourceCollection`1[Committees.Common.Responses.CommitteeBusinessSummary]": {
        "title": "ResourceCollection<CommitteeBusinessSummary>",
        "type": "object",
        "properties": {
          "items": {
            "title": "IEnumerable<CommitteeBusinessSummary>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.CommitteeBusinessSummary"
            },
            "nullable": true
          },
          "totalResults": {
            "type": "integer",
            "format": "int32"
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "links": {
            "title": "ICollection<Link>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.ResourceCollection`1[Committees.Common.Responses.CommitteeMember]": {
        "title": "ResourceCollection<CommitteeMember>",
        "type": "object",
        "properties": {
          "items": {
            "title": "IEnumerable<CommitteeMember>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.CommitteeMember"
            },
            "nullable": true
          },
          "totalResults": {
            "type": "integer",
            "format": "int32"
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "links": {
            "title": "ICollection<Link>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.ResourceCollection`1[Committees.Common.Responses.CommitteeSummary]": {
        "title": "ResourceCollection<CommitteeSummary>",
        "type": "object",
        "properties": {
          "items": {
            "title": "IEnumerable<CommitteeSummary>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.CommitteeSummary"
            },
            "nullable": true
          },
          "totalResults": {
            "type": "integer",
            "format": "int32"
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "links": {
            "title": "ICollection<Link>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.ResourceCollection`1[Committees.Common.Responses.Common.Events.EventSummary]": {
        "title": "ResourceCollection<EventSummary>",
        "type": "object",
        "properties": {
          "items": {
            "title": "IEnumerable<EventSummary>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.Common.Events.EventSummary"
            },
            "nullable": true
          },
          "totalResults": {
            "type": "integer",
            "format": "int32"
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "links": {
            "title": "ICollection<Link>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.ResourceCollection`1[Committees.Common.Responses.Common.Submission.HybridBillPetition]": {
        "title": "ResourceCollection<HybridBillPetition>",
        "type": "object",
        "properties": {
          "items": {
            "title": "IEnumerable<HybridBillPetition>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.Common.Submission.HybridBillPetition"
            },
            "nullable": true
          },
          "totalResults": {
            "type": "integer",
            "format": "int32"
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "links": {
            "title": "ICollection<Link>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.ResourceCollection`1[Committees.Common.Responses.Common.Submission.OralEvidence]": {
        "title": "ResourceCollection<OralEvidence>",
        "type": "object",
        "properties": {
          "items": {
            "title": "IEnumerable<OralEvidence>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.Common.Submission.OralEvidence"
            },
            "nullable": true
          },
          "totalResults": {
            "type": "integer",
            "format": "int32"
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "links": {
            "title": "ICollection<Link>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.ResourceCollection`1[Committees.Common.Responses.Common.Submission.WrittenEvidence]": {
        "title": "ResourceCollection<WrittenEvidence>",
        "type": "object",
        "properties": {
          "items": {
            "title": "IEnumerable<WrittenEvidence>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.Common.Submission.WrittenEvidence"
            },
            "nullable": true
          },
          "totalResults": {
            "type": "integer",
            "format": "int32"
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "links": {
            "title": "ICollection<Link>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.ResourceCollection`1[Committees.Common.Responses.EventActivities]": {
        "title": "ResourceCollection<EventActivities>",
        "type": "object",
        "properties": {
          "items": {
            "title": "IEnumerable<EventActivities>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.EventActivities"
            },
            "nullable": true
          },
          "totalResults": {
            "type": "integer",
            "format": "int32"
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "links": {
            "title": "ICollection<Link>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.ResourceCollection`1[Committees.Common.Responses.Publication]": {
        "title": "ResourceCollection<Publication>",
        "type": "object",
        "properties": {
          "items": {
            "title": "IEnumerable<Publication>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.Publication"
            },
            "nullable": true
          },
          "totalResults": {
            "type": "integer",
            "format": "int32"
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "links": {
            "title": "ICollection<Link>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.ActivityDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The id of the activity",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "The name of the activity",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "description": "The datetime the activity starts",
            "format": "date-time"
          },
          "endDate": {
            "title": "Nullable<DateTime>",
            "type": "string",
            "description": "The datetime the activity ends",
            "format": "date-time",
            "nullable": true
          },
          "eventId": {
            "type": "integer",
            "description": "The id of the event this activity is attached to",
            "format": "int32"
          },
          "isPrivate": {
            "type": "boolean",
            "description": "Whether an activity is private or public"
          },
          "activityType": {
            "type": "string",
            "description": "Type of activity",
            "nullable": true
          },
          "attendees": {
            "title": "IEnumerable<ActivityPerson>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.Common.People.ActivityPerson"
            },
            "description": "A list of attendees of the activity",
            "nullable": true
          },
          "committeeBusinesses": {
            "title": "IEnumerable<CommitteeBusinessSummary>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.CommitteeBusinessSummary"
            },
            "nullable": true
          },
          "oralEvidences": {
            "title": "IEnumerable<OralEvidence>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.Common.Submission.OralEvidence"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.ArchivedPublicationGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.Broadcast.ActivityForBroadcasters": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the activity.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "The type of the activity.",
            "nullable": true
          },
          "startTime": {
            "type": "string",
            "description": "The start time of the activity.",
            "format": "date-time"
          },
          "endTime": {
            "title": "Nullable<DateTimeOffset>",
            "type": "string",
            "description": "The end time for the activity.",
            "format": "date-time",
            "nullable": true
          },
          "private": {
            "type": "boolean",
            "description": "Whether the activity is held in private."
          },
          "subjects": {
            "title": "IEnumerable<String>",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The committee business that forms the subject of the meeting.",
            "nullable": true
          },
          "attendees": {
            "title": "IEnumerable<ActivityPerson>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.Common.People.ActivityPerson"
            },
            "description": "The people attending the activity.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An activity representation for broadcasters."
      },
      "Committees.Common.Responses.Broadcast.MeetingLocation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.CommitteeBusinessDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id of committee business",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "description": "Title of committee business",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Common.Business.CommitteeBusinessType"
          },
          "openDate": {
            "type": "string",
            "description": "Date the business started",
            "format": "date-time"
          },
          "closeDate": {
            "title": "Nullable<DateTime>",
            "type": "string",
            "description": "Date the business ended",
            "format": "date-time",
            "nullable": true
          },
          "latestReport": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Common.Publication.PublicationSummary"
          },
          "openSubmissionPeriods": {
            "title": "IEnumerable<SubmissionPeriodSummary>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.Common.Submission.SubmissionPeriodSummary"
            },
            "description": "Currently open submission periods",
            "nullable": true
          },
          "closedSubmissionPeriods": {
            "title": "IEnumerable<SubmissionPeriodSummary>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.Common.Submission.SubmissionPeriodSummary"
            },
            "description": "Closed submission periods",
            "nullable": true
          },
          "nextOralEvidenceSession": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Common.Activity.ActivitySummary"
          },
          "contact": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Common.Shared.ContactInformation"
          },
          "scope": {
            "type": "string",
            "description": "Scope of the committee business",
            "nullable": true
          },
          "relatedInformation": {
            "title": "IEnumerable<Links>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.Common.Shared.Links"
            },
            "description": "Related information for the committee business",
            "nullable": true
          },
          "banner": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Common.Shared.Banner"
          },
          "hcNumbers": {
            "title": "IEnumerable<HouseNumber>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.Common.Shared.HouseNumber"
            },
            "description": "HC Numbers for the committee business",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.CommitteeBusinessSummary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id of committee business",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "description": "Title of committee business",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Common.Business.CommitteeBusinessType"
          },
          "openDate": {
            "type": "string",
            "description": "Date the business started",
            "format": "date-time"
          },
          "closeDate": {
            "title": "Nullable<DateTime>",
            "type": "string",
            "description": "Date the business ended",
            "format": "date-time",
            "nullable": true
          },
          "latestReport": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Common.Publication.PublicationSummary"
          },
          "openSubmissionPeriods": {
            "title": "IEnumerable<SubmissionPeriodSummary>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.Common.Submission.SubmissionPeriodSummary"
            },
            "description": "Currently open submission periods",
            "nullable": true
          },
          "closedSubmissionPeriods": {
            "title": "IEnumerable<SubmissionPeriodSummary>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.Common.Submission.SubmissionPeriodSummary"
            },
            "description": "Closed submission periods",
            "nullable": true
          },
          "nextOralEvidenceSession": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Common.Activity.ActivitySummary"
          },
          "contact": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Common.Shared.ContactInformation"
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.CommitteeDetails": {
        "type": "object",
        "properties": {
          "contact": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Common.Shared.ContactInformation"
          },
          "id": {
            "type": "integer",
            "description": "The id of the committee",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "The current name of the committee",
            "nullable": true
          },
          "parentCommittee": {
            "$ref": "#/components/schemas/Committees.Common.Responses.CommitteeSummary"
          },
          "subCommittees": {
            "title": "IEnumerable<CommitteeSummary>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.CommitteeSummary"
            },
            "description": "Sub-committees of this committee",
            "nullable": true
          },
          "house": {
            "$ref": "#/components/schemas/Committees.Common.Enums.House"
          },
          "leadHouse": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Common.Committee.LeadHouse"
          },
          "category": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Common.Committee.CommitteeCategory"
          },
          "committeeTypes": {
            "title": "IEnumerable<CommitteeType>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.Common.Committee.CommitteeType"
            },
            "description": "List of Committee types",
            "nullable": true
          },
          "showOnWebsite": {
            "type": "boolean",
            "description": "If this committee should be shown on the website"
          },
          "websiteLegacyUrl": {
            "type": "string",
            "description": "The legacy website URL for the committee, if one exists.",
            "nullable": true
          },
          "websiteLegacyRedirectEnabled": {
            "type": "boolean",
            "description": "Whether automatic redirect to the legacy website has been enabled for the committee."
          },
          "startDate": {
            "type": "string",
            "description": "The start date of the committee",
            "format": "date-time"
          },
          "endDate": {
            "title": "Nullable<DateTime>",
            "type": "string",
            "description": "The end date of the committee",
            "format": "date-time",
            "nullable": true
          },
          "dateCommonsAppointed": {
            "title": "Nullable<DateTime>",
            "type": "string",
            "description": "The date the committee was appointed by the House of Commons",
            "format": "date-time",
            "nullable": true
          },
          "dateLordsAppointed": {
            "title": "Nullable<DateTime>",
            "type": "string",
            "description": "The date the committee was appointed by the House of Lords",
            "format": "date-time",
            "nullable": true
          },
          "scrutinisingDepartments": {
            "title": "IEnumerable<ScrutinisingDepartment>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.ScrutinisingDepartment"
            },
            "description": "All the departments the committee scrutinises",
            "nullable": true
          },
          "isLeadCommittee": {
            "title": "Nullable<Boolean>",
            "type": "boolean",
            "description": "Is the lead Committee, if linked to an event with multiple Committees",
            "nullable": true
          },
          "nameHistory": {
            "title": "ICollection<CommitteeName>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.Common.Committee.CommitteeName"
            },
            "description": "Previous names of this committee",
            "nullable": true
          },
          "banner": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Common.Shared.Banner"
          },
          "contentLinks": {
            "title": "IEnumerable<ContentLink>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.Common.Shared.ContentLink"
            },
            "description": "Social Media accounts of this committee",
            "nullable": true
          },
          "purpose": {
            "type": "string",
            "description": "The purpose of the committee",
            "nullable": true
          },
          "previousCommittees": {
            "title": "IEnumerable<CommitteeSummary>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.CommitteeSummary"
            },
            "description": "Previous committees associated with this committee",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.CommitteeMeetingForBroadcasters": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The id of the meeting event.",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "description": "The title of the meeting event.",
            "nullable": true
          },
          "startTime": {
            "title": "Nullable<DateTimeOffset>",
            "type": "string",
            "description": "The start time of the event.",
            "format": "date-time",
            "nullable": true
          },
          "endTime": {
            "title": "Nullable<DateTimeOffset>",
            "type": "string",
            "description": "The end time of the event.",
            "format": "date-time",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "description": "The notes related to the event.",
            "nullable": true
          },
          "isCommons": {
            "type": "boolean",
            "description": "Is a House of Commons event."
          },
          "isLords": {
            "type": "boolean",
            "description": "Is a House of Lords event."
          },
          "location": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Broadcast.MeetingLocation"
          },
          "committees": {
            "title": "IEnumerable<CommitteeSummary>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.CommitteeSummary"
            },
            "description": "Which committees are involved in the event.",
            "nullable": true
          },
          "activities": {
            "title": "IEnumerable<ActivityForBroadcasters>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.Broadcast.ActivityForBroadcasters"
            },
            "description": "The schedule of activities for the event.",
            "nullable": true
          },
          "eventType": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Common.Events.EventTypeDetails"
          },
          "cancelledDate": {
            "title": "Nullable<DateTimeOffset>",
            "type": "string",
            "description": "The date the meeting was cancelled, null if not cancelled.",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.CommitteeMember": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "personId": {
            "title": "Nullable<Int32>",
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "photoUrl": {
            "type": "string",
            "nullable": true
          },
          "memberInfo": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Common.People.MemberInfo"
          },
          "isLayMember": {
            "type": "boolean"
          },
          "roles": {
            "title": "IEnumerable<CommitteeMemberRole>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.Common.People.CommitteeMemberRole"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.CommitteeSummary": {
        "type": "object",
        "properties": {
          "contact": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Common.Shared.ContactInformation"
          },
          "id": {
            "type": "integer",
            "description": "The id of the committee",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "The current name of the committee",
            "nullable": true
          },
          "parentCommittee": {
            "$ref": "#/components/schemas/Committees.Common.Responses.CommitteeSummary"
          },
          "subCommittees": {
            "title": "IEnumerable<CommitteeSummary>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.CommitteeSummary"
            },
            "description": "Sub-committees of this committee",
            "nullable": true
          },
          "house": {
            "$ref": "#/components/schemas/Committees.Common.Enums.House"
          },
          "leadHouse": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Common.Committee.LeadHouse"
          },
          "category": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Common.Committee.CommitteeCategory"
          },
          "committeeTypes": {
            "title": "IEnumerable<CommitteeType>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.Common.Committee.CommitteeType"
            },
            "description": "List of Committee types",
            "nullable": true
          },
          "showOnWebsite": {
            "type": "boolean",
            "description": "If this committee should be shown on the website"
          },
          "websiteLegacyUrl": {
            "type": "string",
            "description": "The legacy website URL for the committee, if one exists.",
            "nullable": true
          },
          "websiteLegacyRedirectEnabled": {
            "type": "boolean",
            "description": "Whether automatic redirect to the legacy website has been enabled for the committee."
          },
          "startDate": {
            "type": "string",
            "description": "The start date of the committee",
            "format": "date-time"
          },
          "endDate": {
            "title": "Nullable<DateTime>",
            "type": "string",
            "description": "The end date of the committee",
            "format": "date-time",
            "nullable": true
          },
          "dateCommonsAppointed": {
            "title": "Nullable<DateTime>",
            "type": "string",
            "description": "The date the committee was appointed by the House of Commons",
            "format": "date-time",
            "nullable": true
          },
          "dateLordsAppointed": {
            "title": "Nullable<DateTime>",
            "type": "string",
            "description": "The date the committee was appointed by the House of Lords",
            "format": "date-time",
            "nullable": true
          },
          "scrutinisingDepartments": {
            "title": "IEnumerable<ScrutinisingDepartment>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.ScrutinisingDepartment"
            },
            "description": "All the departments the committee scrutinises",
            "nullable": true
          },
          "isLeadCommittee": {
            "title": "Nullable<Boolean>",
            "type": "boolean",
            "description": "Is the lead Committee, if linked to an event with multiple Committees",
            "nullable": true
          },
          "nameHistory": {
            "title": "ICollection<CommitteeName>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.Common.Committee.CommitteeName"
            },
            "description": "Previous names of this committee",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.Common.Activity.ActivitySummary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The id of the activity",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "The name of the activity",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "description": "The datetime the activity starts",
            "format": "date-time"
          },
          "endDate": {
            "title": "Nullable<DateTime>",
            "type": "string",
            "description": "The datetime the activity ends",
            "format": "date-time",
            "nullable": true
          },
          "eventId": {
            "type": "integer",
            "description": "The id of the event this activity is attached to",
            "format": "int32"
          },
          "isPrivate": {
            "type": "boolean",
            "description": "Whether an activity is private or public"
          },
          "activityType": {
            "type": "string",
            "description": "Type of activity",
            "nullable": true
          },
          "attendees": {
            "title": "IEnumerable<ActivityPerson>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.Common.People.ActivityPerson"
            },
            "description": "A list of attendees of the activity",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.Common.Activity.RemoteAttendance": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/Committees.Common.Enums.RemoteAttendanceStatus"
          },
          "text": {
            "type": "string",
            "description": "The remote attendance text",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.Common.Business.CommitteeBusinessType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Business type Id",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of business type",
            "nullable": true
          },
          "isInquiry": {
            "type": "boolean",
            "description": "If the business is an inquiry"
          },
          "description": {
            "type": "string",
            "description": "Description of the business",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.Common.Committee.CommitteeCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Committee category Id",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Committee category Name",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.Common.Committee.CommitteeName": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "committeeId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "title": "Nullable<DateTime>",
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.Common.Committee.CommitteeType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Committee type Id",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Committee type name",
            "nullable": true
          },
          "committeeCategory": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Common.Committee.CommitteeCategory"
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.Common.Committee.LeadHouse": {
        "type": "object",
        "properties": {
          "isCommons": {
            "type": "boolean"
          },
          "isLords": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.Common.Committee.MemberCommittee": {
        "type": "object",
        "properties": {
          "contact": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Common.Shared.ContactInformation"
          },
          "id": {
            "type": "integer",
            "description": "The id of the committee",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "The current name of the committee",
            "nullable": true
          },
          "parentCommittee": {
            "$ref": "#/components/schemas/Committees.Common.Responses.CommitteeSummary"
          },
          "subCommittees": {
            "title": "IEnumerable<CommitteeSummary>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.CommitteeSummary"
            },
            "description": "Sub-committees of this committee",
            "nullable": true
          },
          "house": {
            "$ref": "#/components/schemas/Committees.Common.Enums.House"
          },
          "leadHouse": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Common.Committee.LeadHouse"
          },
          "category": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Common.Committee.CommitteeCategory"
          },
          "committeeTypes": {
            "title": "IEnumerable<CommitteeType>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.Common.Committee.CommitteeType"
            },
            "description": "List of Committee types",
            "nullable": true
          },
          "showOnWebsite": {
            "type": "boolean",
            "description": "If this committee should be shown on the website"
          },
          "websiteLegacyUrl": {
            "type": "string",
            "description": "The legacy website URL for the committee, if one exists.",
            "nullable": true
          },
          "websiteLegacyRedirectEnabled": {
            "type": "boolean",
            "description": "Whether automatic redirect to the legacy website has been enabled for the committee."
          },
          "startDate": {
            "type": "string",
            "description": "The start date of the committee",
            "format": "date-time"
          },
          "endDate": {
            "title": "Nullable<DateTime>",
            "type": "string",
            "description": "The end date of the committee",
            "format": "date-time",
            "nullable": true
          },
          "dateCommonsAppointed": {
            "title": "Nullable<DateTime>",
            "type": "string",
            "description": "The date the committee was appointed by the House of Commons",
            "format": "date-time",
            "nullable": true
          },
          "dateLordsAppointed": {
            "title": "Nullable<DateTime>",
            "type": "string",
            "description": "The date the committee was appointed by the House of Lords",
            "format": "date-time",
            "nullable": true
          },
          "scrutinisingDepartments": {
            "title": "IEnumerable<ScrutinisingDepartment>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.ScrutinisingDepartment"
            },
            "description": "All the departments the committee scrutinises",
            "nullable": true
          },
          "isLeadCommittee": {
            "title": "Nullable<Boolean>",
            "type": "boolean",
            "description": "Is the lead Committee, if linked to an event with multiple Committees",
            "nullable": true
          },
          "nameHistory": {
            "title": "ICollection<CommitteeName>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.Common.Committee.CommitteeName"
            },
            "description": "Previous names of this committee",
            "nullable": true
          },
          "roles": {
            "title": "IEnumerable<CommitteeMemberRole>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.Common.People.CommitteeMemberRole"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.Common.Department": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Common.Shared.Address"
          },
          "otherAddress": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.Common.Document.Document": {
        "type": "object",
        "properties": {
          "documentId": {
            "type": "integer",
            "format": "int32"
          },
          "files": {
            "title": "IEnumerable<DocumentFile>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.Common.Document.DocumentFile"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.Common.Document.DocumentFile": {
        "type": "object",
        "properties": {
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "fileSize": {
            "title": "Nullable<Int64>",
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "fileDataFormat": {
            "$ref": "#/components/schemas/Committees.Common.Enums.FileDataFormat"
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.Common.Events.EventSummary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "title": "Nullable<DateTime>",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "cancelledDate": {
            "title": "Nullable<DateTime>",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "locationId": {
            "title": "Nullable<Int32>",
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "eventType": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Common.Events.EventTypeDetails"
          },
          "eventSource": {
            "type": "string",
            "nullable": true
          },
          "committees": {
            "title": "IEnumerable<CommitteeSummary>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.CommitteeSummary"
            },
            "nullable": true
          },
          "committeeBusinesses": {
            "title": "IEnumerable<CommitteeBusinessSummary>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.CommitteeBusinessSummary"
            },
            "nullable": true
          },
          "childEvents": {
            "title": "IEnumerable<EventSummary>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.Common.Events.EventSummary"
            },
            "nullable": true
          },
          "nextActivity": {
            "$ref": "#/components/schemas/Committees.Common.Responses.ActivityDetails"
          },
          "activities": {
            "title": "IEnumerable<ActivityDetails>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.ActivityDetails"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.Common.Events.EventTypeDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isVisit": {
            "type": "boolean"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.Common.People.ActivityPerson": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "personId": {
            "title": "Nullable<Int32>",
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "photoUrl": {
            "type": "string",
            "nullable": true
          },
          "memberInfo": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Common.People.MemberInfo"
          },
          "organisations": {
            "title": "IEnumerable<Organisation>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.Common.Submission.Organisation"
            },
            "nullable": true
          },
          "submitterType": {
            "$ref": "#/components/schemas/Committees.Common.Enums.SubmitterType"
          },
          "additionalContext": {
            "type": "string",
            "nullable": true
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.Common.People.Attendee": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "personId": {
            "title": "Nullable<Int32>",
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "photoUrl": {
            "type": "string",
            "nullable": true
          },
          "memberInfo": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Common.People.MemberInfo"
          },
          "layMember": {
            "title": "Nullable<Boolean>",
            "type": "boolean",
            "nullable": true
          },
          "remoteAttendance": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Common.Activity.RemoteAttendance"
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.Common.People.CommitteeMemberRole": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "title": "Nullable<DateTime>",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "role": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Common.People.Role"
          },
          "exOfficio": {
            "type": "boolean"
          },
          "alternate": {
            "type": "boolean"
          },
          "coOpted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.Common.People.MemberInfo": {
        "type": "object",
        "properties": {
          "memberFrom": {
            "type": "string",
            "nullable": true
          },
          "party": {
            "type": "string",
            "nullable": true
          },
          "partyColour": {
            "type": "string",
            "nullable": true
          },
          "mnisId": {
            "type": "integer",
            "format": "int32"
          },
          "isChair": {
            "type": "boolean"
          },
          "listAs": {
            "type": "string",
            "nullable": true
          },
          "displayAs": {
            "type": "string",
            "nullable": true
          },
          "fullTitle": {
            "type": "string",
            "nullable": true
          },
          "addressAs": {
            "type": "string",
            "nullable": true
          },
          "house": {
            "$ref": "#/components/schemas/Committees.Common.Enums.House"
          },
          "isCurrent": {
            "title": "Nullable<Boolean>",
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.Common.People.Role": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The id of the role",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "The role name",
            "nullable": true
          },
          "roleType": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Common.People.RoleType"
          },
          "isChair": {
            "type": "boolean",
            "description": "Is the role a chair"
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.Common.People.RoleType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The id of the role type",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "The Name of the role type",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.Common.People.Submitter": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "personId": {
            "title": "Nullable<Int32>",
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "photoUrl": {
            "type": "string",
            "nullable": true
          },
          "memberInfo": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Common.People.MemberInfo"
          },
          "organisations": {
            "title": "IEnumerable<Organisation>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.Common.Submission.Organisation"
            },
            "nullable": true
          },
          "submitterType": {
            "$ref": "#/components/schemas/Committees.Common.Enums.SubmitterType"
          },
          "additionalContext": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.Common.Publication.GovernmentResponse": {
        "type": "object",
        "properties": {
          "publication": {
            "title": "IEnumerable<PublicationSummary>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.Common.Publication.PublicationSummary"
            },
            "description": "Publication for government response",
            "nullable": true
          },
          "responseDeadline": {
            "title": "Nullable<DateTime>",
            "type": "string",
            "description": "Deadline for response",
            "format": "date-time",
            "nullable": true
          },
          "responseExcepted": {
            "type": "boolean",
            "description": "If the response is expected"
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.Common.Publication.PublicationSummary": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Description of publication",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "The id of the publication",
            "format": "int32"
          },
          "publicationStartDate": {
            "title": "Nullable<DateTime>",
            "type": "string",
            "description": "Date when publication can be published from",
            "format": "date-time",
            "nullable": true
          },
          "governmentResponses": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Common.Publication.GovernmentResponse"
          },
          "publicationEndDate": {
            "title": "Nullable<DateTime>",
            "type": "string",
            "description": "Date when publication can be published until",
            "format": "date-time",
            "nullable": true
          },
          "documents": {
            "title": "IEnumerable<Document>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.Common.Document.Document"
            },
            "description": "Documents associated with the publication",
            "nullable": true
          },
          "hcNumber": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Common.Shared.HouseNumber"
          },
          "hlPaper": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Common.Shared.HouseNumber"
          },
          "type": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Common.Publication.PublicationType"
          },
          "responseToPublicationId": {
            "title": "Nullable<Int32>",
            "type": "integer",
            "description": "If publication is in response to another publication, that publication's id",
            "format": "int32",
            "nullable": true
          },
          "additionalContentUrl": {
            "type": "string",
            "description": "Url to additional content related to the publication",
            "nullable": true
          },
          "additionalContentUrl2": {
            "type": "string",
            "description": "Url2 for additional content related to the publication",
            "nullable": true
          },
          "respondingDepartment": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Common.Department"
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.Common.Publication.PublicationType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The id of the publication type",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "The name of the publication type",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "The description of the publication type",
            "nullable": true
          },
          "governmentCanRespond": {
            "type": "boolean",
            "description": "Indicates that the government can respond to this type of publication"
          },
          "canBeResponse": {
            "type": "boolean",
            "description": "Indicates that publications of this type can be responses to other publications."
          },
          "iconKey": {
            "type": "string",
            "description": "Icon type to be rendered on the website for this type of publication",
            "nullable": true
          },
          "pluralVersion": {
            "type": "string",
            "description": "Plural form of the publication type name",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.Common.Shared.Address": {
        "type": "object",
        "properties": {
          "addressLine1": {
            "type": "string",
            "nullable": true
          },
          "addressLine2": {
            "type": "string",
            "nullable": true
          },
          "addressLine3": {
            "type": "string",
            "nullable": true
          },
          "addressLine4": {
            "type": "string",
            "nullable": true
          },
          "addressLine5": {
            "type": "string",
            "nullable": true
          },
          "postcode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.Common.Shared.Banner": {
        "type": "object",
        "properties": {
          "desktopBanner": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Common.Shared.File"
          },
          "mobileBanner": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Common.Shared.File"
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.Common.Shared.ContactInformation": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Current contact email",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "Telephone number",
            "nullable": true
          },
          "address": {
            "type": "string",
            "description": "Postal address",
            "nullable": true
          },
          "contactDisclaimer": {
            "type": "string",
            "description": "Disclaimer for contact information",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.Common.Shared.ContentLink": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the content link",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "Url of the content link",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description of the content link",
            "nullable": true
          },
          "displayOrder": {
            "type": "integer",
            "description": "Order to display the content link",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.Common.Shared.File": {
        "type": "object",
        "properties": {
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "fileData": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.Common.Shared.HouseNumber": {
        "type": "object",
        "properties": {
          "number": {
            "type": "string",
            "nullable": true
          },
          "sessionId": {
            "type": "integer",
            "format": "int32"
          },
          "sessionDescription": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.Common.Shared.Links": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.Common.Submission.HybridBillPetition": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "publicationDate": {
            "title": "Nullable<DateTime>",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "witnesses": {
            "title": "IEnumerable<Submitter>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.Common.People.Submitter"
            },
            "nullable": true
          },
          "document": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Common.Document.Document"
          },
          "committees": {
            "title": "IEnumerable<CommitteeSummary>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.CommitteeSummary"
            },
            "nullable": true
          },
          "submissionId": {
            "type": "string",
            "format": "uuid"
          },
          "internalReference": {
            "type": "string",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "committeeBusiness": {
            "$ref": "#/components/schemas/Committees.Common.Responses.CommitteeBusinessSummary"
          },
          "hcNumber": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Common.Shared.HouseNumber"
          },
          "outcome": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Common.Submission.HybridBillPetitionOutcome"
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.Common.Submission.HybridBillPetitionOutcome": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "outcomeText": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.Common.Submission.OralEvidence": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "publicationDate": {
            "title": "Nullable<DateTime>",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "witnesses": {
            "title": "IEnumerable<Submitter>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.Common.People.Submitter"
            },
            "nullable": true
          },
          "document": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Common.Document.Document"
          },
          "committees": {
            "title": "IEnumerable<CommitteeSummary>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.CommitteeSummary"
            },
            "nullable": true
          },
          "activityId": {
            "type": "integer",
            "description": "The id of the activity",
            "format": "int32"
          },
          "meetingDate": {
            "title": "Nullable<DateTime>",
            "type": "string",
            "description": "The date of the meeting",
            "format": "date-time",
            "nullable": true
          },
          "activityStartDate": {
            "type": "string",
            "description": "The datetime the activity starts",
            "format": "date-time"
          },
          "legacyHtmlUrl": {
            "type": "string",
            "nullable": true
          },
          "legacyPdfUrl": {
            "type": "string",
            "nullable": true
          },
          "committeeBusinesses": {
            "title": "IEnumerable<CommitteeBusinessSummary>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.CommitteeBusinessSummary"
            },
            "description": "Associated committee businesses",
            "nullable": true
          },
          "hcNumbers": {
            "title": "IEnumerable<HouseNumber>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.Common.Shared.HouseNumber"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.Common.Submission.Organisation": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "type": "string",
            "nullable": true
          },
          "idmsId": {
            "type": "string",
            "nullable": true
          },
          "cisId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.Common.Submission.SubmissionPeriodSummary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id of the submission period",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "description": "Submission period start date",
            "format": "date-time"
          },
          "endDate": {
            "title": "Nullable<DateTime>",
            "type": "string",
            "description": "Submission period end date",
            "format": "date-time",
            "nullable": true
          },
          "submissionType": {
            "$ref": "#/components/schemas/Committees.Common.Enums.SubmissionType"
          },
          "isPromoted": {
            "type": "boolean",
            "description": "Whether the submission period should be promoted or not."
          },
          "statusMessage": {
            "type": "string",
            "description": "The status message of the submission period (if applicable).",
            "nullable": true
          },
          "allowSubmissionsPastEndDate": {
            "type": "boolean",
            "description": "Whether submissions are allowed past the deadline if the form is accessed via direct link."
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.Common.Submission.SubmissionPeriodTemplateDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "defaultForSubmissionPeriod": {
            "type": "boolean"
          },
          "document": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Common.Document.Document"
          },
          "submissionPeriodTemplateRoutes": {
            "title": "IEnumerable<SubmissionPeriodTemplateRouteDetails>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.Common.Submission.SubmissionPeriodTemplateRouteDetails"
            },
            "nullable": true
          },
          "submissionPeriodTemplateSubmitterTypes": {
            "title": "IEnumerable<SubmissionPeriodTemplateSubmitterTypeDetails>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.Common.Submission.SubmissionPeriodTemplateSubmitterTypeDetails"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.Common.Submission.SubmissionPeriodTemplateRouteDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "submissionRoute": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.Common.Submission.SubmissionPeriodTemplateSubmitterTypeDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "submitterType": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.Common.Submission.WrittenEvidence": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "publicationDate": {
            "title": "Nullable<DateTime>",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "witnesses": {
            "title": "IEnumerable<Submitter>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.Common.People.Submitter"
            },
            "nullable": true
          },
          "document": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Common.Document.Document"
          },
          "committees": {
            "title": "IEnumerable<CommitteeSummary>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.CommitteeSummary"
            },
            "nullable": true
          },
          "submissionId": {
            "type": "string",
            "format": "uuid"
          },
          "internalReference": {
            "type": "string",
            "nullable": true
          },
          "committeeBusiness": {
            "$ref": "#/components/schemas/Committees.Common.Responses.CommitteeBusinessSummary"
          },
          "hcNumber": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Common.Shared.HouseNumber"
          },
          "legacyHtmlUrl": {
            "type": "string",
            "nullable": true
          },
          "legacyPdfUrl": {
            "type": "string",
            "nullable": true
          },
          "anonymous": {
            "type": "boolean",
            "description": "If the Written Evidence is anonymous and that no submitter information is published"
          },
          "anonymousWitnessText": {
            "type": "string",
            "description": "Text to display for anonymous witnesses",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.Country": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "isoCode": {
            "type": "string",
            "nullable": true
          },
          "text": {
            "type": "string",
            "nullable": true
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.DocumentFileDetail": {
        "type": "object",
        "properties": {
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "fileSize": {
            "title": "Nullable<Int64>",
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "fileDataFormat": {
            "$ref": "#/components/schemas/Committees.Common.Enums.FileDataFormat"
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.EventActivities": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "title": "Nullable<DateTime>",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "cancelledDate": {
            "title": "Nullable<DateTime>",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "locationId": {
            "title": "Nullable<Int32>",
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "eventType": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Common.Events.EventTypeDetails"
          },
          "eventSource": {
            "type": "string",
            "nullable": true
          },
          "committees": {
            "title": "IEnumerable<CommitteeSummary>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.CommitteeSummary"
            },
            "nullable": true
          },
          "committeeBusinesses": {
            "title": "IEnumerable<CommitteeBusinessSummary>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.CommitteeBusinessSummary"
            },
            "nullable": true
          },
          "childEvents": {
            "title": "IEnumerable<EventSummary>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.Common.Events.EventSummary"
            },
            "nullable": true
          },
          "nextActivity": {
            "$ref": "#/components/schemas/Committees.Common.Responses.ActivityDetails"
          },
          "activities": {
            "title": "IEnumerable<ActivitySummary>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.Common.Activity.ActivitySummary"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.EventAttendanceDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "title": "Nullable<DateTime>",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "cancelledDate": {
            "title": "Nullable<DateTime>",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "locationId": {
            "title": "Nullable<Int32>",
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "eventType": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Common.Events.EventTypeDetails"
          },
          "eventSource": {
            "type": "string",
            "nullable": true
          },
          "committees": {
            "title": "IEnumerable<CommitteeSummary>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.CommitteeSummary"
            },
            "nullable": true
          },
          "committeeBusinesses": {
            "title": "IEnumerable<CommitteeBusinessSummary>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.CommitteeBusinessSummary"
            },
            "nullable": true
          },
          "childEvents": {
            "title": "IEnumerable<EventSummary>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.Common.Events.EventSummary"
            },
            "nullable": true
          },
          "nextActivity": {
            "$ref": "#/components/schemas/Committees.Common.Responses.ActivityDetails"
          },
          "activities": {
            "title": "IEnumerable<ActivityDetails>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.ActivityDetails"
            },
            "nullable": true
          },
          "membersAttended": {
            "title": "IEnumerable<Attendee>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.Common.People.Attendee"
            },
            "nullable": true
          },
          "othersAttended": {
            "title": "IEnumerable<Attendee>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.Common.People.Attendee"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.EventDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "title": "Nullable<DateTime>",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "cancelledDate": {
            "title": "Nullable<DateTime>",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "locationId": {
            "title": "Nullable<Int32>",
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "eventType": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Common.Events.EventTypeDetails"
          },
          "eventSource": {
            "type": "string",
            "nullable": true
          },
          "committees": {
            "title": "IEnumerable<CommitteeSummary>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.CommitteeSummary"
            },
            "nullable": true
          },
          "committeeBusinesses": {
            "title": "IEnumerable<CommitteeBusinessSummary>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.CommitteeBusinessSummary"
            },
            "nullable": true
          },
          "childEvents": {
            "title": "IEnumerable<EventSummary>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.Common.Events.EventSummary"
            },
            "nullable": true
          },
          "nextActivity": {
            "$ref": "#/components/schemas/Committees.Common.Responses.ActivityDetails"
          },
          "activities": {
            "title": "IEnumerable<ActivityDetails>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.ActivityDetails"
            },
            "nullable": true
          },
          "primaryDescription": {
            "type": "string",
            "nullable": true
          },
          "secondaryDescription": {
            "type": "string",
            "nullable": true
          },
          "parliamentTvUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.MemberFullMemberships": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "personId": {
            "title": "Nullable<Int32>",
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "photoUrl": {
            "type": "string",
            "nullable": true
          },
          "memberInfo": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Common.People.MemberInfo"
          },
          "committees": {
            "title": "IEnumerable<MemberCommittee>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.Common.Committee.MemberCommittee"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.MessagingBannerDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "displayType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.Publication": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Description of publication",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "The id of the publication",
            "format": "int32"
          },
          "publicationStartDate": {
            "title": "Nullable<DateTime>",
            "type": "string",
            "description": "Date when publication can be published from",
            "format": "date-time",
            "nullable": true
          },
          "governmentResponses": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Common.Publication.GovernmentResponse"
          },
          "publicationEndDate": {
            "title": "Nullable<DateTime>",
            "type": "string",
            "description": "Date when publication can be published until",
            "format": "date-time",
            "nullable": true
          },
          "documents": {
            "title": "IEnumerable<Document>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.Common.Document.Document"
            },
            "description": "Documents associated with the publication",
            "nullable": true
          },
          "hcNumber": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Common.Shared.HouseNumber"
          },
          "hlPaper": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Common.Shared.HouseNumber"
          },
          "type": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Common.Publication.PublicationType"
          },
          "responseToPublicationId": {
            "title": "Nullable<Int32>",
            "type": "integer",
            "description": "If publication is in response to another publication, that publication's id",
            "format": "int32",
            "nullable": true
          },
          "additionalContentUrl": {
            "type": "string",
            "description": "Url to additional content related to the publication",
            "nullable": true
          },
          "additionalContentUrl2": {
            "type": "string",
            "description": "Url2 for additional content related to the publication",
            "nullable": true
          },
          "respondingDepartment": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Common.Department"
          },
          "businesses": {
            "title": "IEnumerable<CommitteeBusinessSummary>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.CommitteeBusinessSummary"
            },
            "description": "Committee business associated with the publication",
            "nullable": true
          },
          "committee": {
            "$ref": "#/components/schemas/Committees.Common.Responses.CommitteeSummary"
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.PublicationGroup": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "publicationType": {
            "$ref": "#/components/schemas/Committees.Common.Responses.Common.Publication.PublicationType"
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.ScrutinisingDepartment": {
        "type": "object",
        "properties": {
          "departmentId": {
            "type": "integer",
            "description": "The Id of the department which this committee scrutinises",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "The name of the department which this committee scrutinises",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Committees.Common.Responses.SubmissionPeriodDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id of the submission period",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "description": "Submission period start date",
            "format": "date-time"
          },
          "endDate": {
            "title": "Nullable<DateTime>",
            "type": "string",
            "description": "Submission period end date",
            "format": "date-time",
            "nullable": true
          },
          "submissionType": {
            "$ref": "#/components/schemas/Committees.Common.Enums.SubmissionType"
          },
          "isPromoted": {
            "type": "boolean",
            "description": "Whether the submission period should be promoted or not."
          },
          "statusMessage": {
            "type": "string",
            "description": "The status message of the submission period (if applicable).",
            "nullable": true
          },
          "allowSubmissionsPastEndDate": {
            "type": "boolean",
            "description": "Whether submissions are allowed past the deadline if the form is accessed via direct link."
          },
          "committeeBusiness": {
            "$ref": "#/components/schemas/Committees.Common.Responses.CommitteeBusinessSummary"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "submissionPeriodTemplates": {
            "title": "IEnumerable<SubmissionPeriodTemplateDetails>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Committees.Common.Responses.Common.Submission.SubmissionPeriodTemplateDetails"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Committees.Services.Domain.BannerLocation": {
        "enum": [
          "HomePage",
          "FindACommitteePage",
          "CommonsCommitteeDetailsPage",
          "LordsCommitteeDetailsPage",
          "JointCommitteeDetailsPage",
          "FindAnInquiryPage",
          "FindAPublicationPage",
          "FormerCommitteesSearchPage"
        ],
        "type": "string"
      },
      "Microsoft.AspNetCore.Mvc.ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "title": "Nullable<Int32>",
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      }
    }
  }
}