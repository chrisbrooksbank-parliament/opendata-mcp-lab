{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "What's on (Calendar) API",
    "description": "An API that allows querying of Parliamentary what's on (calendar) data. Includes data on events, procedural dates, sessions, as well as reference data.",
    "contact": {
      "name": "UK Parliament",
      "url": "https://www.parliament.uk/",
      "email": "softwareengineering@parliament.uk"
    }
  },
  "host": "whatson-api.parliament.uk",
  "schemes": [
    "http",
    "https"
  ],
  "paths": {
    "/calendar/events/nonsitting.{format}": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get a filtered list of non sitting days",
        "description": "Get a filtered list of non-sitting days and recess periods.",
        "operationId": "Events_NonSittingDays",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "A valid format for results (xml, json, rss, atom or ics)",
            "required": true,
            "type": "string"
          },
          {
            "name": "queryParameters.house",
            "in": "query",
            "description": "Valid House within Parliament (Commons or Lords).",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryParameters.eventTypeId",
            "in": "query",
            "description": "Valid event type Id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryParameters.startDate",
            "in": "query",
            "description": "Date range start date",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "queryParameters.endDate",
            "in": "query",
            "description": "Date range end date",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "queryParameters.date",
            "in": "query",
            "description": "Date",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryParameters.locationId",
            "in": "query",
            "description": "Valid location Id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryParameters.memberId",
            "in": "query",
            "description": "Valid member Id from the Members Names service",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryParameters.tag",
            "in": "query",
            "description": "Valid tag",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryParameters.committeeId",
            "in": "query",
            "description": "Valid committee Id from the Committee Tracker service",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryParameters.inquiryId",
            "in": "query",
            "description": "Valid inquiry Id from the Committee Tracker service",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryParameters.categoryId",
            "in": "query",
            "description": "Valid Category Id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryParameters.eventId",
            "in": "query",
            "description": "The unique identifier of an event, represented by the attribute Id in the result XML/JSON.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryParameters.categoryCode",
            "in": "query",
            "description": "Valid Category Code e.g. NSD, REC, POR, DIS",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryParameters.answeringBodyIds",
            "in": "query",
            "description": "Valid answering body ids, usually government departments\r\nso oral questions for specified departments can be fetched",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "queryParameters.searchTerm",
            "in": "query",
            "description": "A search term to filter events",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryParameters.groupChildEventsWithParent",
            "in": "query",
            "description": "Tells CIS whether to group child events under their parent, or present them as a flat list-of-siblings",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NonSittingDatePoco"
              }
            }
          }
        }
      }
    },
    "/calendar/events/list.{format}": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get a filtered list of events",
        "description": "This service will only return actual events, it will not show non-sitting days or recess periods.\r\n            NB - the total number of days that can be returned by any single call is 31.",
        "operationId": "Events_EventsByDate",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "A valid format for results (xml, json, rss, atom or ics)",
            "required": true,
            "type": "string"
          },
          {
            "name": "queryParameters.house",
            "in": "query",
            "description": "Valid House within Parliament (Commons or Lords).",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryParameters.eventTypeId",
            "in": "query",
            "description": "Valid event type Id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryParameters.startDate",
            "in": "query",
            "description": "Date range start date",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "queryParameters.endDate",
            "in": "query",
            "description": "Date range end date",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "queryParameters.date",
            "in": "query",
            "description": "Date",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryParameters.locationId",
            "in": "query",
            "description": "Valid location Id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryParameters.memberId",
            "in": "query",
            "description": "Valid member Id from the Members Names service",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryParameters.tag",
            "in": "query",
            "description": "Valid tag",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryParameters.committeeId",
            "in": "query",
            "description": "Valid committee Id from the Committee Tracker service",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryParameters.inquiryId",
            "in": "query",
            "description": "Valid inquiry Id from the Committee Tracker service",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryParameters.categoryId",
            "in": "query",
            "description": "Valid Category Id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryParameters.eventId",
            "in": "query",
            "description": "The unique identifier of an event, represented by the attribute Id in the result XML/JSON.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryParameters.categoryCode",
            "in": "query",
            "description": "Valid Category Code e.g. NSD, REC, POR, DIS",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryParameters.answeringBodyIds",
            "in": "query",
            "description": "Valid answering body ids, usually government departments\r\nso oral questions for specified departments can be fetched",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "queryParameters.searchTerm",
            "in": "query",
            "description": "A search term to filter events",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryParameters.groupChildEventsWithParent",
            "in": "query",
            "description": "Tells CIS whether to group child events under their parent, or present them as a flat list-of-siblings",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EventPoco"
              }
            }
          }
        }
      }
    },
    "/calendar/events/diary.{format}": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get a diary of events grouped by day",
        "description": "Get a diary of events grouped by day.\r\n            This call will show non-sitting days and recess periods for each house.",
        "operationId": "Events_DaysByDate",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "A valid format for results (xml, json, rss, atom or ics)",
            "required": true,
            "type": "string"
          },
          {
            "name": "queryParameters.house",
            "in": "query",
            "description": "Valid House within Parliament (Commons or Lords).",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryParameters.eventTypeId",
            "in": "query",
            "description": "Valid event type Id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryParameters.startDate",
            "in": "query",
            "description": "Date range start date",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "queryParameters.endDate",
            "in": "query",
            "description": "Date range end date",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "queryParameters.date",
            "in": "query",
            "description": "Date",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryParameters.locationId",
            "in": "query",
            "description": "Valid location Id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryParameters.memberId",
            "in": "query",
            "description": "Valid member Id from the Members Names service",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryParameters.tag",
            "in": "query",
            "description": "Valid tag",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryParameters.committeeId",
            "in": "query",
            "description": "Valid committee Id from the Committee Tracker service",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryParameters.inquiryId",
            "in": "query",
            "description": "Valid inquiry Id from the Committee Tracker service",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryParameters.categoryId",
            "in": "query",
            "description": "Valid Category Id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryParameters.eventId",
            "in": "query",
            "description": "The unique identifier of an event, represented by the attribute Id in the result XML/JSON.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryParameters.categoryCode",
            "in": "query",
            "description": "Valid Category Code e.g. NSD, REC, POR, DIS",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryParameters.answeringBodyIds",
            "in": "query",
            "description": "Valid answering body ids, usually government departments\r\nso oral questions for specified departments can be fetched",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "queryParameters.searchTerm",
            "in": "query",
            "description": "A search term to filter events",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryParameters.groupChildEventsWithParent",
            "in": "query",
            "description": "Tells CIS whether to group child events under their parent, or present them as a flat list-of-siblings",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DayPoco"
              }
            }
          }
        }
      }
    },
    "/calendar/events/speakers.{format}": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get a list of speakers for a specific Lords event.",
        "description": "Get a list of speakers (in speaking order) for a specific Lords event id.",
        "operationId": "Events_EventSpeakers",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "A valid format for results (xml, json, rss, atom or ics)",
            "required": true,
            "type": "string"
          },
          {
            "name": "queryParameters.house",
            "in": "query",
            "description": "Valid House within Parliament (Commons or Lords).",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryParameters.eventTypeId",
            "in": "query",
            "description": "Valid event type Id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryParameters.startDate",
            "in": "query",
            "description": "Date range start date",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "queryParameters.endDate",
            "in": "query",
            "description": "Date range end date",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "queryParameters.date",
            "in": "query",
            "description": "Date",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryParameters.locationId",
            "in": "query",
            "description": "Valid location Id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryParameters.memberId",
            "in": "query",
            "description": "Valid member Id from the Members Names service",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryParameters.tag",
            "in": "query",
            "description": "Valid tag",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryParameters.committeeId",
            "in": "query",
            "description": "Valid committee Id from the Committee Tracker service",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryParameters.inquiryId",
            "in": "query",
            "description": "Valid inquiry Id from the Committee Tracker service",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryParameters.categoryId",
            "in": "query",
            "description": "Valid Category Id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryParameters.eventId",
            "in": "query",
            "description": "The unique identifier of an event, represented by the attribute Id in the result XML/JSON.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryParameters.categoryCode",
            "in": "query",
            "description": "Valid Category Code e.g. NSD, REC, POR, DIS",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryParameters.answeringBodyIds",
            "in": "query",
            "description": "Valid answering body ids, usually government departments\r\nso oral questions for specified departments can be fetched",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "queryParameters.searchTerm",
            "in": "query",
            "description": "A search term to filter events",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryParameters.groupChildEventsWithParent",
            "in": "query",
            "description": "Tells CIS whether to group child events under their parent, or present them as a flat list-of-siblings",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EventSpeakerPoco"
              }
            }
          }
        }
      }
    },
    "/calendar/events/cal{eventId}": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get an event by Id from the calendar database, ignoring eQM, CIS and other data sources",
        "operationId": "Events_GetSingleCalendarEvent",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventPoco"
            }
          }
        }
      }
    },
    "/calendar/proceduraldates/{house}/sittingdates.{format}": {
      "get": {
        "tags": [
          "Procedural dates"
        ],
        "summary": "Get a list of sitting days (including weekend sittings where they have been defined) for the specific House and date range.",
        "operationId": "ProceduralDates_GetSittingDates",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "A valid format for results (xml or json)",
            "required": true,
            "type": "string"
          },
          {
            "name": "house",
            "in": "path",
            "description": "Valid House within Parliament (Commons or Lords).",
            "required": true,
            "type": "string"
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "The start date of the range to get sitting dates for.",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "The end date of the range to get sitting dates for.",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SittingDateListPoco"
            }
          }
        }
      }
    },
    "/calendar/proceduraldates/{house}/answerdate.{format}": {
      "get": {
        "tags": [
          "Procedural dates"
        ],
        "summary": "Get the earliest date for answer for a written question (Commons only).",
        "description": "Get the earliest date for answer for a written question (Commons only).",
        "operationId": "ProceduralDates_GetEarliestAnswerDate",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "A valid format for results (xml or json)",
            "required": true,
            "type": "string"
          },
          {
            "name": "house",
            "in": "path",
            "description": "Valid House within Parliament (Commons or Lords)",
            "required": true,
            "type": "string"
          },
          {
            "name": "questionType",
            "in": "query",
            "description": "Type of written question - Named or Ordinary",
            "required": true,
            "type": "string",
            "enum": [
              "NamedDay",
              "Ordinary"
            ]
          },
          {
            "name": "tabledDate",
            "in": "query",
            "description": "Date written question was tabled (Date format: YYYY-MM-DD)",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        }
      }
    },
    "/calendar/proceduraldates/{house}/tablingdate.{format}": {
      "get": {
        "tags": [
          "Procedural dates"
        ],
        "summary": "Get the valid tabling date for a specified date (Commons only).",
        "description": "Get the valid tabling date for a specified date (Commons only).",
        "operationId": "ProceduralDates_GetValidTablingDate",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "A valid format for results (xml or json)",
            "required": true,
            "type": "string"
          },
          {
            "name": "house",
            "in": "path",
            "description": "Valid House within Parliament (Commons or Lords)",
            "required": true,
            "type": "string"
          },
          {
            "name": "requestedDate",
            "in": "query",
            "description": "Next tabling date after the date specified (Date format: YYYY-MM-DD)",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        }
      }
    },
    "/calendar/proceduraldates/{house}/nextsittingdate.{format}": {
      "get": {
        "tags": [
          "Procedural dates"
        ],
        "summary": "Get the next sitting day for a House.",
        "description": "Get the next sitting day for a House.",
        "operationId": "ProceduralDates_GetNextSittingDate",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "A valid format for results (xml or json)",
            "required": true,
            "type": "string"
          },
          {
            "name": "house",
            "in": "path",
            "description": "Valid House within Parliament (Commons or Lords)",
            "required": true,
            "type": "string"
          },
          {
            "name": "dateToCheck",
            "in": "query",
            "description": "Next sitting date after the date specified (Date format: YYYY-MM-DD)",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "includeWeekendSittings",
            "in": "query",
            "description": "Include weekend sittings where they have been defined",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        }
      }
    },
    "/calendar/proceduraldates/{house}/lastsittingdate.{format}": {
      "get": {
        "tags": [
          "Procedural dates"
        ],
        "summary": "Get the sitting day preceding the date specified for a House.",
        "description": "Get the next sitting day for a House.",
        "operationId": "ProceduralDates_GetLastSittingDate",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "A valid format for results (xml or json)",
            "required": true,
            "type": "string"
          },
          {
            "name": "house",
            "in": "path",
            "description": "Valid House within Parliament (Commons or Lords)",
            "required": true,
            "type": "string"
          },
          {
            "name": "dateToCheck",
            "in": "query",
            "description": "Last sitting date prior to the date specified (Date format: YYYY-MM-DD)",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "includeWeekendSittings",
            "in": "query",
            "description": "Include weekend sittings where they have been defined",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        }
      }
    },
    "/calendar/proceduraldates/annulmentdate/forDate.{format}": {
      "get": {
        "tags": [
          "Procedural dates"
        ],
        "summary": "Get the annulment date for a negative SI laid on the date specified.",
        "description": "Get the annulment date for a negative SI laid on the date specified.",
        "operationId": "ProceduralDates_GetAnnulmentDate",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "A valid format for results (xml or json)",
            "required": true,
            "type": "string"
          },
          {
            "name": "dateLaid",
            "in": "query",
            "description": "Date negative SI was laid(Date format: YYYY-MM-DD)",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "daysInFuture",
            "in": "query",
            "description": "The number of days from the datelaid when the SI will be annulled e.g. 40",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isTreaty",
            "in": "query",
            "description": "Whether the SI is a treaty or not (i.e. an agreement or convention) (Default: false)",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        }
      }
    },
    "/calendar/locations/list.{format}": {
      "get": {
        "tags": [
          "Reference"
        ],
        "summary": "Get list of locations",
        "description": "Get a list of locations, including their description and id",
        "operationId": "Reference_Locations",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "A valid format for results (xml or json)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LocationPoco"
              }
            }
          }
        }
      }
    },
    "/calendar/tags/list.{format}": {
      "get": {
        "tags": [
          "Reference"
        ],
        "summary": "Get list of all tags",
        "description": "Get list of all tags",
        "operationId": "Reference_Tags",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "A valid format for results (xml or json)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TagPoco"
              }
            }
          }
        }
      }
    },
    "/calendar/types/list.{format}": {
      "get": {
        "tags": [
          "Reference"
        ],
        "summary": "Get list of all event types",
        "description": "Get list of all event types",
        "operationId": "Reference_Types",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "A valid format for results (xml or json)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EventTypePoco"
              }
            }
          }
        }
      }
    },
    "/calendar/categories/list.{format}": {
      "get": {
        "tags": [
          "Reference"
        ],
        "summary": "Get list of all event categories",
        "description": "Get list of all event categories",
        "operationId": "Reference_Categories",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "A valid format for results (xml or json)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EventCategoryPoco"
              }
            }
          }
        }
      }
    },
    "/calendar/events/EventTypeMetaData.{format}": {
      "get": {
        "tags": [
          "Reference"
        ],
        "summary": "Get list of event type meta data",
        "description": "Get list of event type meta data",
        "operationId": "Reference_TypesMetaData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "A valid format for results (xml or json)",
            "required": true,
            "type": "string"
          },
          {
            "name": "queryParameters.house",
            "in": "query",
            "description": "Valid House within Parliament (Commons or Lords).",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryParameters.eventTypeId",
            "in": "query",
            "description": "Valid event type Id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryParameters.startDate",
            "in": "query",
            "description": "Date range start date",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "queryParameters.endDate",
            "in": "query",
            "description": "Date range end date",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "queryParameters.date",
            "in": "query",
            "description": "Date",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryParameters.locationId",
            "in": "query",
            "description": "Valid location Id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryParameters.memberId",
            "in": "query",
            "description": "Valid member Id from the Members Names service",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryParameters.tag",
            "in": "query",
            "description": "Valid tag",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryParameters.committeeId",
            "in": "query",
            "description": "Valid committee Id from the Committee Tracker service",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryParameters.inquiryId",
            "in": "query",
            "description": "Valid inquiry Id from the Committee Tracker service",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryParameters.categoryId",
            "in": "query",
            "description": "Valid Category Id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryParameters.eventId",
            "in": "query",
            "description": "The unique identifier of an event, represented by the attribute Id in the result XML/JSON.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryParameters.categoryCode",
            "in": "query",
            "description": "Valid Category Code e.g. NSD, REC, POR, DIS",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryParameters.answeringBodyIds",
            "in": "query",
            "description": "Valid answering body ids, usually government departments\r\nso oral questions for specified departments can be fetched",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "queryParameters.searchTerm",
            "in": "query",
            "description": "A search term to filter events",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryParameters.groupChildEventsWithParent",
            "in": "query",
            "description": "Tells CIS whether to group child events under their parent, or present them as a flat list-of-siblings",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EventTypeMetaDataPoco"
              }
            }
          }
        }
      }
    },
    "/calendar/sessions/byid.{format}/{sessionId}": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "summary": "Get a single Session",
        "description": "Get a single Session",
        "operationId": "Sessions_GetSessionById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "A valid format for results (xml or json)",
            "required": true,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "path",
            "description": "The unique identifier of a session, represented by the attribute SessionId in the result XML/JSON.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Session"
            }
          }
        }
      }
    },
    "/calendar/sessions/fordate.{format}/{date}": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "summary": "Get the Session which covers the specified date",
        "description": "Get the Session which covers the specified date",
        "operationId": "Sessions_GetSessionforDate",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "A valid format for results (xml or json)",
            "required": true,
            "type": "string"
          },
          {
            "name": "date",
            "in": "path",
            "description": "Date that will sit between the start and end dates of a session. Format for date is yyyy-MM-dd",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Session"
            }
          }
        }
      }
    },
    "/calendar/sessions/list.{format}": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "summary": "Get list of all Sessions",
        "description": "Get list of all Sessions within Calendar and ordered by session start date (Ascending).",
        "operationId": "Sessions_GetAllSessions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "A valid format for results (xml or json)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Session"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "QueryParameters": {
      "description": "Query parameters",
      "type": "object",
      "properties": {
        "House": {
          "description": "Valid House within Parliament (Commons or Lords).",
          "type": "string"
        },
        "EventTypeId": {
          "format": "int32",
          "description": "Valid event type Id",
          "type": "integer"
        },
        "StartDate": {
          "format": "date-time",
          "description": "Date range start date",
          "type": "string"
        },
        "EndDate": {
          "format": "date-time",
          "description": "Date range end date",
          "type": "string"
        },
        "Date": {
          "description": "Date",
          "type": "string"
        },
        "LocationId": {
          "format": "int32",
          "description": "Valid location Id",
          "type": "integer"
        },
        "MemberId": {
          "format": "int32",
          "description": "Valid member Id from the Members Names service",
          "type": "integer"
        },
        "Tag": {
          "description": "Valid tag",
          "type": "string"
        },
        "CommitteeId": {
          "format": "int32",
          "description": "Valid committee Id from the Committee Tracker service",
          "type": "integer"
        },
        "InquiryId": {
          "format": "int32",
          "description": "Valid inquiry Id from the Committee Tracker service",
          "type": "integer"
        },
        "CategoryId": {
          "format": "int32",
          "description": "Valid Category Id",
          "type": "integer"
        },
        "EventId": {
          "format": "int32",
          "description": "The unique identifier of an event, represented by the attribute Id in the result XML/JSON.",
          "type": "integer"
        },
        "CategoryCode": {
          "description": "Valid Category Code e.g. NSD, REC, POR, DIS",
          "type": "string"
        },
        "AnsweringBodyIds": {
          "description": "Valid answering body ids, usually government departments\r\nso oral questions for specified departments can be fetched",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "SearchTerm": {
          "description": "A search term to filter events",
          "type": "string"
        },
        "GroupChildEventsWithParent": {
          "description": "Tells CIS whether to group child events under their parent, or present them as a flat list-of-siblings",
          "type": "boolean"
        }
      }
    },
    "NonSittingDatePoco": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "StartDate": {
          "format": "date-time",
          "type": "string"
        },
        "EndDate": {
          "format": "date-time",
          "type": "string"
        },
        "SummarisedDetails": {
          "type": "string"
        },
        "StartTime": {
          "type": "string"
        },
        "EndTime": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "SortOrder": {
          "format": "int32",
          "type": "integer"
        },
        "Category": {
          "type": "string"
        },
        "Location": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        },
        "House": {
          "type": "string"
        },
        "CategoryCode": {
          "type": "string"
        }
      }
    },
    "EventPoco": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "StartDate": {
          "format": "date-time",
          "type": "string"
        },
        "EndDate": {
          "format": "date-time",
          "type": "string"
        },
        "CancelledDate": {
          "format": "date-time",
          "type": "string"
        },
        "StartTime": {
          "type": "string"
        },
        "EndTime": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Notes": {
          "type": "string"
        },
        "SortOrder": {
          "format": "int32",
          "type": "integer"
        },
        "EventActivities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventActivity"
          }
        },
        "Type": {
          "type": "string"
        },
        "House": {
          "type": "string"
        },
        "LeadHouse": {
          "type": "string"
        },
        "Category": {
          "type": "string"
        },
        "Location": {
          "type": "string"
        },
        "LocationMetadata": {
          "type": "string"
        },
        "HasSpeakers": {
          "type": "boolean"
        },
        "Committee": {
          "$ref": "#/definitions/CommitteePoco"
        },
        "Tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagPoco"
          }
        },
        "Members": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MemberPoco"
          }
        },
        "Metadata": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetadataPoco"
          }
        },
        "SummarisedDetails": {
          "type": "string",
          "readOnly": true
        },
        "BillId": {
          "format": "int32",
          "type": "integer"
        },
        "BillName": {
          "type": "string"
        },
        "BillPageLink": {
          "type": "string"
        }
      }
    },
    "EventActivity": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "StartTime": {
          "type": "string"
        },
        "EndTime": {
          "type": "string"
        },
        "Attendees": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CommitteePoco": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "Description": {
          "type": "string"
        },
        "Category": {
          "enum": [
            "General",
            "Select",
            "Joint",
            "Other"
          ],
          "type": "string"
        },
        "IsLords": {
          "type": "boolean"
        },
        "IsCommons": {
          "type": "boolean"
        },
        "Inquiries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InquiryPoco"
          }
        },
        "ShowOnWebsite": {
          "type": "boolean"
        }
      }
    },
    "TagPoco": {
      "type": "object",
      "properties": {
        "Description": {
          "type": "string"
        }
      }
    },
    "MemberPoco": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "ListAs": {
          "type": "string"
        },
        "Party": {
          "type": "string"
        },
        "MemberFrom": {
          "type": "string"
        },
        "PartyColour": {
          "type": "string"
        },
        "PhotoUrl": {
          "type": "string"
        },
        "SortOrder": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "MetadataPoco": {
      "type": "object",
      "properties": {
        "Url": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "InquiryPoco": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "Description": {
          "type": "string"
        },
        "SortOrder": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "DayPoco": {
      "type": "object",
      "properties": {
        "Date": {
          "format": "date-time",
          "type": "string"
        },
        "Houses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HousePoco"
          }
        }
      }
    },
    "HousePoco": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "NonSittingPeriod": {
          "$ref": "#/definitions/NonSittingDatePoco"
        },
        "Events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventPoco"
          }
        }
      }
    },
    "EventSpeakerPoco": {
      "type": "object",
      "properties": {
        "EventSpeakerId": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "ListAs": {
          "type": "string"
        },
        "MemberFrom": {
          "type": "string"
        },
        "Party": {
          "type": "string"
        },
        "PartyColour": {
          "type": "string"
        },
        "MemberId": {
          "format": "int32",
          "type": "integer"
        },
        "SpeakingOrder": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "SittingDateListPoco": {
      "description": "Contains a list of sitting dates.",
      "type": "object",
      "properties": {
        "SittingDates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SittingDatePoco"
          }
        }
      }
    },
    "SittingDatePoco": {
      "description": "Represents information about an individual sitting date.",
      "type": "object",
      "properties": {
        "Date": {
          "format": "date-time",
          "description": "The date of the sitting.",
          "type": "string"
        }
      }
    },
    "LocationPoco": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "Description": {
          "type": "string"
        },
        "AllowMetadata": {
          "type": "boolean"
        },
        "RequiresRoomBooking": {
          "type": "boolean"
        },
        "IsCommons": {
          "type": "boolean"
        },
        "IsLords": {
          "type": "boolean"
        },
        "IsActive": {
          "type": "boolean"
        },
        "RoomCapacityParticipants": {
          "format": "int32",
          "type": "integer"
        },
        "RoomCapacityAudience": {
          "format": "int32",
          "type": "integer"
        },
        "SortOrder": {
          "format": "int32",
          "type": "integer"
        },
        "AVTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AVTypePoco"
          }
        },
        "AccessibilityTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessibilityTypePoco"
          }
        }
      }
    },
    "AVTypePoco": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "AccessibilityTypePoco": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "EventTypePoco": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "Description": {
          "type": "string"
        },
        "IsCommons": {
          "type": "boolean"
        },
        "IsLords": {
          "type": "boolean"
        },
        "HasLocation": {
          "type": "boolean"
        },
        "CommitteesAreSelect": {
          "type": "boolean"
        },
        "DefaultStartTimes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StartTimePoco"
          }
        }
      }
    },
    "StartTimePoco": {
      "type": "object",
      "properties": {
        "DayOfWeek": {
          "format": "int32",
          "type": "integer"
        },
        "Time": {
          "type": "string"
        }
      }
    },
    "EventCategoryPoco": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "Description": {
          "type": "string"
        },
        "Summary": {
          "type": "string"
        }
      }
    },
    "EventTypeMetaDataPoco": {
      "type": "object",
      "properties": {
        "EventType": {
          "type": "string"
        },
        "EventDate": {
          "format": "date-time",
          "type": "string"
        },
        "ParliamentTvLink": {
          "type": "string"
        }
      }
    },
    "Session": {
      "required": [
        "Number",
        "CommonsDescription",
        "LordsDescription",
        "SessionNumber",
        "ParliamentNumber"
      ],
      "type": "object",
      "properties": {
        "SessionId": {
          "format": "int32",
          "type": "integer"
        },
        "Number": {
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "StartDate": {
          "format": "date-time",
          "type": "string"
        },
        "EndDate": {
          "format": "date-time",
          "type": "string"
        },
        "CommonsDescription": {
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "LordsDescription": {
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "SessionNumber": {
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "ParliamentNumber": {
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        }
      }
    }
  }
}